{"version":3,"sources":["features/contextMenu/contextMenuSlice.ts","app/hooks.ts","features/contextMenu/contextMenuAPI.ts","features/contextMenu/SelectLanguageDialog.tsx","lang/messages.js","features/contextMenu/ContextMenu.tsx","common/AppBar.tsx","lang/index.ts","app/axios.ts","features/quote/quoteAPI.ts","features/quote/quoteSlice.ts","common/Loading.tsx","features/quote/Quote.tsx","pages/Home.tsx","features/quoteForm/formSlice.ts","features/quoteForm/formAPI.ts","features/quoteForm/Form.tsx","pages/Edit.tsx","pages/Add.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx","features/quote/Quote.module.css","features/contextMenu/ContextMenu.module.css","features/quoteForm/Form.module.css"],"names":["enumLanguages","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchCount","amount","Promise","resolve","setTimeout","data","initialState","lang","localStorage","getItem","RU","status","contextMenuSlice","createAsyncThunk","a","response","createSlice","name","reducers","setLang","state","action","payload","setItem","extraReducers","builder","actions","selectLang","contextMenu","useStyles","makeStyles","container","flex","display","justifyContent","button","margin","languages","abb","EN","HE","SelectLanguageDialog","props","dispatch","handleContextMenuClose","handleToggleOpenSelectLangDialog","useState","selectedLang","setSelectedLang","Dialog","open","onClose","aria-labelledby","DialogTitle","id","List","className","styles","list","map","language","ListItem","listItem","classes","selected","listItemSelected","onClick","handleSetLang","ListItemText","primary","SHARED_MESSAGES","defaultMessage","description","ContextMenu","setContextMenuAnchorEl","anchorEl","history","useHistory","openSelectLangDialog","setOpenSelectLangDialog","handleClose","Menu","keepMounted","MenuItem","push","theme","createStyles","grow","flexGrow","position","top","backgroundColor","menuButton","marginRight","spacing","title","breakpoints","up","search","borderRadius","shape","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","MyHeaderAppBar","setAnchorEl","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","contextMenuAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","isContextMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","transformOrigin","mobileMenuId","renderMobileMenu","IconButton","aria-label","aria-controls","aria-haspopup","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","ru","en","he","axios","require","baseURL","timeout","headers","fetchQuote","query","Object","keys","forEach","key","console","log","get","fetchQuoteAsync","quote","quoteSlice","addCase","pending","fulfilled","selectQuoteState","selectQuote","size","Quote","quoteState","handleFetchQuote","handleEditQuote","useEffect","Loading","wrapper","author","dangerouslySetInnerHTML","__html","context","contextRtl","contextLtl","tagsContainer","tags","tag","index","Chip","label","buttonContainer","ButtonGroup","buttonGroup","Button","getQuoteData","Home","editQuoteAsync","args","put","addQuoteAsync","post","quoteFormSlice","editStatus","addStatus","editResult","addResult","selectQuoteFormState","quoteForm","QuoteForm","quoteFormState","location","pathname","setData","handleOnChange","path","e","isArray","target","value","newDate","cloneDeep","current","split","set","useForm","register","handleSubmit","onSubmit","formState","errors","obj","books","contextAuthors","sources","getFormatedObject","form","multiline","type","Input","inputContainer","join","onChange","Textarea","textareaContainer","rows","Edit","Add","THEME","createMuiTheme","typography","fontFamily","App","ThemeProvider","messages","locale","exact","incrementAsync","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","quoteReducer","contextMenuReducer","quoteFormReducer","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.461af747.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './contextMenuAPI';\n\nexport interface ILanguage {\n  name: string;\n  abb: enumLanguages\n}\n\nexport enum enumLanguages {\n  RU = 'ru',\n  HE = 'he',\n  EN = 'en',\n}\nexport interface contextMenuState {\n  lang: enumLanguages | string;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: contextMenuState = {\n  lang: localStorage.getItem('language') || enumLanguages.RU,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const contextMenuSlice = createSlice({\n  name: 'contextMenu',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setLang: (state, action: PayloadAction<enumLanguages>) => {\n      state.lang = action.payload;\n      localStorage.setItem('language', action.payload)\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    // builder\n    //   .addCase(incrementAsync.pending, (state) => {\n    //     state.status = 'loading';\n    //   })\n    //   .addCase(incrementAsync.fulfilled, (state, action) => {\n    //     state.status = 'idle';\n    //     state.value += action.payload;\n    //   });\n  },\n});\n\nexport const { setLang } = contextMenuSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectLang = (state: RootState) => state.contextMenu.lang;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount: number): AppThunk => (\n//   dispatch,\n//   getState\n// ) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport default contextMenuSlice.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useDispatch } from \"react-redux\";\nimport { selectLang, ILanguage, enumLanguages, setLang} from \"./contextMenuSlice\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport styles from \"./ContextMenu.module.css\";\n\nconst useStyles = makeStyles({\n  container: {\n    flex: \"0 1 50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    margin: 4,\n  },\n});\n\nconst languages : ILanguage[] = [\n  {\n    name: \"English\",\n    abb: enumLanguages.EN,\n  },\n  {\n    name: \"Russian\",\n    abb: enumLanguages.RU\n  },\n  {\n    name: \"Hebrew\",\n    abb: enumLanguages.HE\n  }\n];\n\ninterface ISelectLanguageDialog {\n  handleToggleOpenSelectLangDialog: () => void;\n  handleContextMenuClose: () => void;\n}\n\nfunction SelectLanguageDialog(props: ISelectLanguageDialog) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { handleContextMenuClose, handleToggleOpenSelectLangDialog } = props;\n\n  const [selectedLang, setSelectedLang] = useState(useAppSelector(selectLang))\n\n  const handleSetLang = (language: ILanguage) => {\n    dispatch(setLang(language.abb))\n    setSelectedLang(language.abb)\n  }\n\n  return (\n    <Dialog\n      open={true}\n      onClose={() => {\n        handleToggleOpenSelectLangDialog()\n        handleContextMenuClose();\n      }}\n      aria-labelledby=\"select-langauge-dialog\"\n    >\n      <DialogTitle id=\"select-langauge-dialog\">Select Language</DialogTitle>\n      <List className={styles.list}>\n        {languages.map((language) => (\n          <ListItem\n            button\n            className={styles.listItem}\n            classes={{selected: styles.listItemSelected}}\n            selected={selectedLang === language.abb }\n            onClick={() => handleSetLang(language)}\n            key={language.name}\n          >\n            <ListItemText primary={language.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nexport default SelectLanguageDialog;\n","import { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\n\nexport const SHARED_MESSAGES = {\n  next: () => (\n    <FormattedMessage\n      id=\"next\"\n      defaultMessage=\"Next\"\n      description=\"Next\"\n    />\n  ),\n  edit: () => (\n    <FormattedMessage\n      id=\"edit\"\n      defaultMessage=\"Edit\"\n      description=\"Edit\"\n    />\n  ),\n  send: () => (\n    <FormattedMessage\n      id=\"send\"\n      defaultMessage=\"Send\"\n      description=\"Send\"\n    />\n  ),\n  languages: () => (\n    <FormattedMessage\n      id=\"languages\"\n      defaultMessage=\"Languages\"\n      description=\"Languages\"\n    />\n  ),\n  addNew: () => (\n    <FormattedMessage\n      id=\"addNew\"\n      defaultMessage=\"Add New\"\n      description=\"Add New\"\n    />\n  ),\n  homePageTitle: () => (\n    <FormattedMessage\n      id=\"homePageTitle\"\n      defaultMessage=\"Quotes\"\n      description=\"Quotes\"\n    />\n  ),\n};\n","import React, { useState, SetStateAction, Dispatch } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useAppDispatch } from \"../../app/hooks\";\nimport styles from \"./ContextMenu.module.css\";\nimport SelectLanguageDialog from \"./SelectLanguageDialog\";\nimport { SHARED_MESSAGES } from '../../lang/messages';\n\ninterface IContextMenu {\n  setContextMenuAnchorEl: Dispatch<SetStateAction<HTMLElement | null>>;\n  anchorEl: HTMLElement | null;\n}\nexport function ContextMenu(props: IContextMenu) {\n  const { setContextMenuAnchorEl, anchorEl } = props;\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const [openSelectLangDialog, setOpenSelectLangDialog] = useState<boolean>(\n    false\n  );\n\n  const handleClose = () => {\n    setContextMenuAnchorEl(null);\n  };\n\n  const handleToggleOpenSelectLangDialog = () => {\n    setOpenSelectLangDialog(!openSelectLangDialog);\n  }\n\n  const handleAddNewQuote = () => {\n    history.push('/add');\n  }\n\n  return (\n    <>\n      <Menu\n        id=\"context-menu\"\n        anchorEl={anchorEl}\n        className={styles.contextMenu}\n        keepMounted\n        open={true}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleToggleOpenSelectLangDialog}>\n          {SHARED_MESSAGES.languages()}\n        </MenuItem>\n        <MenuItem onClick={handleAddNewQuote}>\n          {SHARED_MESSAGES.addNew()}       \n        </MenuItem>\n      </Menu>\n      {openSelectLangDialog && (\n        <SelectLanguageDialog\n          handleToggleOpenSelectLangDialog={handleToggleOpenSelectLangDialog}\n          handleContextMenuClose={handleClose}\n        />\n      )}\n    </>\n  );\n}\n","import React, {useState} from \"react\";\nimport {\n  fade,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { ContextMenu } from '../features/contextMenu/ContextMenu';\nimport { SHARED_MESSAGES } from '../lang/messages';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n      position: \"sticky\",\n      top: 0,\n      '& header': {\n        backgroundColor: 'rgb(45, 76, 131)'\n      }\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(3),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n    sectionDesktop: {\n      display: \"none\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    sectionMobile: {\n      display: \"flex\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"none\",\n      },\n    },\n  })\n);\n\nfunction MyHeaderAppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [\n    mobileMoreAnchorEl,\n    setMobileMoreAnchorEl,\n  ] = React.useState<null | HTMLElement>(null);\n\n  const [contextMenuAnchorEl, setContextMenuAnchorEl] = useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const isContextMenuOpen = Boolean(contextMenuAnchorEl);\n\n  const handleClickAway = () => {\n    console.log('handleClickAway')\n  }\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  const handleContextMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setContextMenuAnchorEl(event.currentTarget);\n  }\n\n  const handleOpenHomePage = () => {\n    history.push('/');\n  }\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleContextMenuOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open hme page\"\n            onClick={handleOpenHomePage}\n          >\n            <HomeIcon />\n          </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              {SHARED_MESSAGES.homePageTitle()}\n            </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n      {isContextMenuOpen && <ContextMenu \n        setContextMenuAnchorEl={setContextMenuAnchorEl} \n        anchorEl={contextMenuAnchorEl} />}\n    </div>\n  );\n}\n\nexport default MyHeaderAppBar;\n","\nimport ru from './ru.json';\nimport en from './en.json';\nimport he from './he.json';\nimport { enumLanguages } from '../features/contextMenu/contextMenuSlice';\n\nexport default { ru, en, he }","const axios = require('axios');\nexport default axios.create({\n  baseURL: \"http://0.0.0.0:9000/\",\n  timeout: 1000,\n  headers: {\n    \"Access-Control-Allow-Origin\": \"http://0.0.0.0:9000/\", \n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n  },\n});","import axios from \"../../app/axios\";\nimport { IFetchQuoteAsync } from \"./quoteSlice\";\n\nexport function fetchQuote(props: IFetchQuoteAsync) {\n  let query = \"?\";\n  Object.keys(props).forEach((key) => {\n    query += `${key}=${props[key]}`;\n  });\n  console.log(query);\n  return axios.get(\"/quotes/random\" + query);\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchQuote } from './quoteAPI';\n\nexport interface QuoteState {\n  quote?: {\n    id: string,\n    title: Record<string, string>,\n    context: Record<string, string>,\n    language: [string],\n    tags: Record<string, [string]>,\n    author: Record<string, string>,\n    sources: [string],\n    contextAuthors: [string],\n    books: [string],\n    createdAt: string,\n    updatedAt: string,\n  }\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: QuoteState = {\n  status: 'idle',\n};\n\nexport interface IFetchQuoteAsync {\n  lang: string\n}\n\nexport const fetchQuoteAsync = createAsyncThunk(\n  'quote/fetchQuote',\n  async (props: IFetchQuoteAsync) => {\n    const response = await fetchQuote(props);\n    return response.data?.quote;\n  }\n);\n\nexport const quoteSlice = createSlice({\n  name: 'quote',\n  initialState,\n  reducers: {\n    // increment: (state) => {\n    //   // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n    //   // doesn't actually mutate the state because it uses the Immer library,\n    //   // which detects changes to a \"draft state\" and produces a brand new\n    //   // immutable state based off those changes\n    //   state.value += 1;\n    // },\n    // decrement: (state) => {\n    //   state.value -= 1;\n    // },\n    // // Use the PayloadAction type to declare the contents of `action.payload`\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\n    //   state.value += action.payload;\n    // },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchQuoteAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchQuoteAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.quote = action.payload;\n      });\n  },\n});\n\nexport const {  } = quoteSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectQuoteState = (state: RootState) => state.quote;\nexport const selectQuote = (state: RootState) => state.quote.quote;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount: number): AppThunk => (\n//   dispatch,\n//   getState\n// ) => {\n//   const currentValue = selectTitle(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport default quoteSlice.reducer;\n","import React from \"react\";\nimport { CircleToBlockLoading } from \"react-loadingg\";\n\nexport const DEFAULT_SIZE = 'large'\nexport const DEFAULT_COLOR = 'rgb(45, 76, 131)'\n\nexport default (props) => (\n  <CircleToBlockLoading size={DEFAULT_SIZE} color={DEFAULT_COLOR} {...props} />\n);\n","import React, { useEffect } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { selectQuoteState, fetchQuoteAsync } from './quoteSlice';\nimport styles from './Quote.module.css';\nimport Chip from '@material-ui/core/Chip';\nimport { selectLang } from \"../contextMenu/contextMenuSlice\";\nimport { SHARED_MESSAGES } from '../../lang/messages.js';\nimport { useHistory } from \"react-router-dom\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Loading from '../../common/Loading';\n\nexport function Quote() {\n  const quoteState = useAppSelector(selectQuoteState);\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const selectedLang = useAppSelector(selectLang);\n\n  const handleFetchQuote = () => {\n    dispatch(fetchQuoteAsync({lang: selectedLang}))\n  }\n\n  const handleEditQuote = () => {\n    console.log('handleEditQuote')\n    history.push('/edit');\n  }\n\n  useEffect(() => {\n    dispatch(fetchQuoteAsync({lang: selectedLang}))\n  }, [])\n\n  const getQuoteData = () => {\n    return (\n      <div className={styles.wrapper}>\n        <p className={styles.title}> {quoteState.quote?.title[selectedLang]}</p>\n        <p className={styles.author}>\n          {\" \"}\n          {quoteState.quote?.author[selectedLang]}{\" \"}\n        </p>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: quoteState.quote?.context[selectedLang] || \"\",\n          }}\n          className={`${styles.context} ${\n            selectedLang == \"he\" ? styles.contextRtl : styles.contextLtl\n          }`}\n        ></div>\n        <div className={styles.tagsContainer}>\n          {quoteState.quote?.tags[selectedLang].map((tag, index) => {\n            return <Chip key={tag} label={tag} />;\n          })}\n        </div>\n\n        <div className={styles.buttonContainer}>\n          <ButtonGroup\n            size=\"large\"\n            className={styles.buttonGroup}\n            color=\"primary\"\n            aria-label=\"large quote actions\"\n          >\n            <Button onClick={handleFetchQuote}>\n              {SHARED_MESSAGES.next()}\n            </Button>\n            <Button onClick={handleEditQuote}>\n              {SHARED_MESSAGES.edit()}\n            </Button>\n          </ButtonGroup>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={styles.container}>\n      {quoteState.status === \"loading\" ? <Loading /> : getQuoteData()}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Quote } from \"../features/quote/Quote\";\n\nfunction Home() {\n  return <Quote />;\n}\n\nexport default Home;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { editQuote, addQuote } from './formAPI';\n\nexport interface QuoteFormState {\n  editResult? : unknown;\n  editStatus: 'idle' | 'loading' | 'failed';\n  addResult? : unknown;\n  addStatus: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: QuoteFormState = {\n  editStatus: 'idle',\n  addStatus: 'idle',\n};\n\nexport const editQuoteAsync = createAsyncThunk(\n  'quote/editQuote',\n  async (args: any) => {\n    const response = await editQuote(args.id, args.quote);\n    return response.data;\n  }\n);\n\nexport const addQuoteAsync = createAsyncThunk(\n  'quote/addQuote',\n  async (args: any) => {\n    const response = await addQuote(args.quote);\n    return response.data;\n  }\n);\n\nexport const quoteFormSlice = createSlice({\n  name: 'quoteForm',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(editQuoteAsync.pending, (state) => {\n        state.editStatus = 'loading';\n      })\n      .addCase(editQuoteAsync.fulfilled, (state, action) => {\n        state.editStatus = 'idle';\n        state.editResult = action.payload;\n      })\n      .addCase(addQuoteAsync.pending, (state) => {\n        state.addStatus = 'loading';\n      })\n      .addCase(addQuoteAsync.fulfilled, (state, action) => {\n        state.addStatus = 'idle';\n        state.addResult = action.payload;\n      });\n  },\n});\n\nexport const {  } = quoteFormSlice.actions;\n\nexport const selectQuoteFormState = (state: RootState) => state.quoteForm;\n\nexport default quoteFormSlice.reducer;\n","import axios from '../../app/axios';\n\nexport function editQuote(id: string, quote: unknown) {\n  return axios.put(`/quotes/${id}`, quote)\n}\nexport function addQuote(quote: unknown) {\n  return axios.post(`/quotes`, quote)\n}\n","import React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { selectQuote } from '../quote/quoteSlice';\nimport {\n  editQuoteAsync,\n  selectQuoteFormState,\n  addQuoteAsync,\n} from \"./formSlice\";\nimport { SHARED_MESSAGES } from '../../lang/messages.js';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport styles from './Form.module.css';\nimport { set, get, isEmpty, cloneDeep } from 'lodash'\nimport Loading from '../../common/Loading';\n\nexport function QuoteForm() {\n  const quoteFormState = useAppSelector(selectQuoteFormState);\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  let action;;\n  switch (history.location.pathname) {\n    case \"/edit\":\n      action = \"EDIT\";\n      // action = SHARED_MESSAGES.edit();\n      break;\n    case \"/add\":\n      action = \"ADD\";\n      // action = SHARED_MESSAGES.send();\n      break;\n    default:\n      break;\n  }\n\n  const quote = useAppSelector(selectQuote);\n  const [data, setData] = useState(action === \"EDIT\" ? quote : {})\n\n  const handleOnChange = (path, e, isArray) => {\n    console.log('path: ', path)\n    console.log('data: ', data)\n    console.log('e.target.value: ', e.target.value)\n    let newDate = cloneDeep(data)\n    \n    if (isArray){\n      let current = e.target.value.split(', ')\n      // console.log('current: ', current)\n      set(newDate, path, current)\n    } else {\n      set(newDate, path, e.target.value)\n    }\n    console.log('newDate: ', newDate)\n    setData(newDate)\n  }\n\n  const getFormatedObject = data => ({\n    title: {\n      ru: data[\"Title (Russian)\"],\n      he: data[\"Title (Hebrew)\"],\n      en: data[\"Title (English)\"],\n    },\n    context: {\n      ru: data[\"Context (Russian)\"],\n      he: data[\"Context (Hebrew)\"],\n      en: data[\"Context (English)\"],\n    },\n    author: {\n      ru: data[\"Author (Russian)\"],\n      he: data[\"Author (Hebrew)\"],\n      en: data[\"Author (English)\"],\n    },\n    books: data[\"Books\"].split(\", \"),\n    language: data[\"Languages\"].split(\", \"),\n    contextAuthors: data[\"Context Authors\"].split(\", \"),\n    sources: data[\"Sources\"].split(\", \"),\n    tags: {\n      ru: data[\"Tags (Russian)\"].split(\", \"),\n      he: data[\"Tags (Hebrew)\"].split(\", \"),\n      en: data[\"Tags (English)\"].split(\", \"),\n    },\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => {\n    const obj = getFormatedObject(data) \n    console.log('obj: ', obj)\n    if (action === 'EDIT'){\n    dispatch(\n      editQuoteAsync({\n        id: quote!.id,\n        quote: obj,\n      })\n    );\n    } else {\n      dispatch(\n        addQuoteAsync({\n          quote: obj,\n        })\n      );\n    }\n  };\n\n  const getForm = () => {\n      return (\n        <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n          <Input\n            label=\"Title (Russian)\"\n            register={register}\ndata={data}\n            path='title.ru'\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Title (Hebrew)\"\n            register={register}\ndata={data}\n            path='title.he'\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Title (English)\"\n            register={register}\ndata={data}\n            path='title.en'\n            handleOnChange={handleOnChange}\n          />\n\n          <Textarea\n            label=\"Context (Russian)\"\n            register={register}\ndata={data}\n            path='context.ru'\n            handleOnChange={handleOnChange}\n          />\n          <Textarea\n            label=\"Context (Hebrew)\"\n            register={register}\ndata={data}\n            multiline={true}\n            path='context.he'\n            handleOnChange={handleOnChange}\n          />\n          <Textarea\n            label=\"Context (English)\"\n            register={register}\ndata={data}\n            path='context.en'\n            handleOnChange={handleOnChange}\n          />\n\n          <Input\n            label=\"Author (Russian)\"\n            register={register}\ndata={data}\n            path='author.ru'\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Author (Hebrew)\"\n            register={register}\ndata={data}\n            path='author.he'\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Author (English)\"\n            register={register}\ndata={data}\n            path='author.en'\n            handleOnChange={handleOnChange}\n          />\n\n          <Input\n            label=\"Books\"\n            register={register}\ndata={data}\n            path='books'\n            isArray={true}\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Context Authors\"\n            register={register}\ndata={data}\n            path='contextAuthors'\n            isArray={true}\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Languages\"\n            register={register}\ndata={data}\n            path='language'\n            isArray={true}\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Sources\"\n            register={register}\ndata={data}\n            path='sources'\n            isArray={true}\n            handleOnChange={handleOnChange}\n          />\n\n          <Input\n            label=\"Tags (Russian)\"\n            register={register}\ndata={data}\n            path='tags.ru'\n            isArray={true}\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Tags (Hebrew)\"\n            register={register}\ndata={data}\n            path='tags.he'\n            isArray={true}\n            handleOnChange={handleOnChange}\n          />\n          <Input\n            label=\"Tags (English)\"\n            register={register}\ndata={data}\n            path='tags.en'\n            isArray={true}\n            handleOnChange={handleOnChange}\n          />\n\n          <input type=\"submit\" value={action} />\n        </form>\n      );\n  };\n\n  return (\n    quoteFormState.editStatus === 'loading' ? <Loading/> : getForm()\n  )\n}\n\n\nconst Input = ({\n  label,\n  register,\n  data,\n  path,\n  isArray = false,\n  handleOnChange,\n}) => (\n  <div className={styles.inputContainer}>\n    <label>{label}</label>\n    <input\n      {...register(label)}\n      value={isArray ? get(data, path, []).join(\", \") : get(data, path, \"\")}\n      onChange={(e) => handleOnChange(path, e, isArray)}\n    />\n  </div>\n);\n\nconst Textarea = ({ label, register, data, multiline = false, path = 'data.title.ru', handleOnChange }) => (\n  <div className={styles.textareaContainer}>\n    <label>{label}</label>\n    <textarea\n      {...register(label)}\n      value={get(data, path, \"\")}\n      rows={6}\n      multiline={multiline}\n      onChange={(e) => handleOnChange(path, e, false)}\n    />\n  </div>\n);","import React from 'react'\nimport { QuoteForm } from '../features/quoteForm/Form';\n\nexport default function Edit() {\n    return <QuoteForm />\n}\n","import React from 'react'\nimport { QuoteForm } from '../features/quoteForm/Form';\n\nexport default function Add() {\n    return <QuoteForm />\n}\n","import React from 'react';\nimport './App.css';\nimport MyHeaderAppBar from './common/AppBar';\nimport { IntlProvider } from \"react-intl\";\nimport messages from \"./lang\";\nimport { selectLang } from \"../src/features/contextMenu/contextMenuSlice\";\nimport { useAppSelector } from \"../src/app/hooks\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from './pages/Home';\nimport Edit from './pages/Edit';\nimport Add from './pages/Add';\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Nunito',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif'\n    ].join(','),\n  }\n});\n\nfunction App() {\n\n  const selectedLang = useAppSelector(selectLang);\n  \n  return (\n    <ThemeProvider theme={THEME}>\n      <IntlProvider messages={messages[selectedLang]} locale={selectedLang}>\n        <Router>\n          <Switch>\n            <div className=\"App\">\n              <div className=\"App-container\">\n                <MyHeaderAppBar />\n                <Route path=\"/add\">\n                  <Add />\n                </Route>\n                <Route path=\"/edit\">\n                  <Edit />\n                </Route>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n              </div>\n            </div>\n          </Switch>\n        </Router>\n      </IntlProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport quoteReducer from '../features/quote/quoteSlice';\nimport contextMenuReducer from '../features/contextMenu/contextMenuSlice';\nimport quoteFormReducer from '../features/quoteForm/formSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    quote: quoteReducer,\n    contextMenu: contextMenuReducer,\n    quoteForm: quoteFormReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Quote_row__1dCkF\",\"value\":\"Quote_value__2gMFq\",\"button\":\"Quote_button__15GIs\",\"textbox\":\"Quote_textbox__M02Bv\",\"asyncButton\":\"Quote_asyncButton__-4Udb Quote_button__15GIs\",\"container\":\"Quote_container__1hCnI\",\"wrapper\":\"Quote_wrapper__14sIT\",\"title\":\"Quote_title__3WotT\",\"author\":\"Quote_author__1e-YR\",\"context\":\"Quote_context__qZvd5\",\"tagsContainer\":\"Quote_tagsContainer__1jGy4\",\"contextRtl\":\"Quote_contextRtl__1OSyQ\",\"contextLtl\":\"Quote_contextLtl__1VL5g\",\"buttonGroup\":\"Quote_buttonGroup__DU38z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__1fWFt\",\"list\":\"ContextMenu_list__2faNU\",\"listItem\":\"ContextMenu_listItem__HqktD\",\"listItemSelected\":\"ContextMenu_listItemSelected__OSsoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Form_row__2xK98\",\"value\":\"Form_value__2rG34\",\"button\":\"Form_button__2Q8Sc\",\"textbox\":\"Form_textbox__3znvv\",\"asyncButton\":\"Form_asyncButton__Olh1T Form_button__2Q8Sc\",\"container\":\"Form_container__32aEz\",\"form\":\"Form_form__2DDb_\",\"inputContainer\":\"Form_inputContainer__1kIXp\",\"textareaContainer\":\"Form_textareaContainer__1siuD\"};"],"sourceRoot":""}