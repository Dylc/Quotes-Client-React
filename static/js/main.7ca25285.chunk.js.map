{"version":3,"sources":["features/quote/Quote.module.css","common/CompoundButtonsController/components/styles.module.css","features/quoteForm/Form.module.css","features/contextMenu/contextMenuSlice.ts","features/contextMenu/contextMenuAPI.ts","app/hooks.ts","features/contextMenu/SelectLanguageDialog.tsx","lang/messages.js","features/contextMenu/ContextMenu.tsx","app/axios.ts","features/searchBar/searchBarAPI.ts","features/searchBar/searchBarSlice.ts","features/searchBar/SearchBar.tsx","common/AppBar.tsx","lang/index.ts","features/quote/quoteAPI.ts","features/quote/quoteSlice.ts","common/Loading.tsx","utilites/flags/he.svg","utilites/flags/en.svg","utilites/flags/ru.svg","utilites/flags/index.ts","common/CompoundQuote/Quote.tsx","common/CompoundQuote/components/Text.tsx","common/CompoundQuote/components/Context.tsx","common/CompoundQuote/components/Tags.tsx","common/CompoundQuote/components/Flags.tsx","features/quote/QuoteWrapper.tsx","features/quote/Quote.tsx","common/CompoundButtonsController/ButtonsController.tsx","common/CompoundButtonsController/components/Button.tsx","features/quote/ButtonControllers.tsx","pages/Home.tsx","features/quoteForm/formSlice.ts","features/quoteForm/formAPI.ts","common/Confirmation.tsx","utilites/index.js","common/TextFieldController.tsx","features/quoteForm/Form.tsx","pages/Edit.tsx","pages/Add.tsx","noResults.svg","common/NoResults.tsx","pages/Searched.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","index.tsx","common/CompoundQuote/components/styles.module.css","features/contextMenu/ContextMenu.module.css"],"names":["module","exports","enumLanguages","fetchCount","amount","Promise","resolve","setTimeout","data","initialState","lang","localStorage","getItem","HE","status","contextMenuSlice","createAsyncThunk","a","response","createSlice","name","reducers","setLang","state","action","payload","setItem","extraReducers","builder","actions","selectLang","contextMenu","useAppDispatch","useDispatch","useAppSelector","useSelector","languages","abb","EN","RU","SelectLanguageDialog","props","dispatch","handleContextMenuClose","handleToggleOpenSelectLangDialog","useState","selectedLang","setSelectedLang","Dialog","open","onClose","aria-labelledby","DialogTitle","id","List","className","styles","list","map","language","ListItem","button","listItem","classes","selected","listItemSelected","onClick","handleSetLang","ListItemText","primary","SHARED_MESSAGES","defaultMessage","description","ContextMenu","setContextMenuAnchorEl","anchorEl","history","useHistory","openSelectLangDialog","setOpenSelectLangDialog","handleClose","Menu","keepMounted","MenuItem","push","axios","require","create","baseURL","timeout","headers","fetchQuoteByQuery","query","get","fetchQuoteByQueryAsync","searchBarSlice","quotes","isSearching","setIsSearching","addCase","pending","fulfilled","rows","selectSearchedQuotes","searchBar","selectIsSearching","selectStatus","useStyles","makeStyles","theme","createStyles","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","SearchBar","location","pathname","InputBase","onChange","event","target","value","console","log","placeholder","root","input","inputProps","grow","flexGrow","top","menuButton","title","sectionDesktop","sectionMobile","MyHeaderAppBar","setAnchorEl","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","contextMenuAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","isContextMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","transformOrigin","mobileMenuId","renderMobileMenu","IconButton","aria-label","aria-controls","aria-haspopup","AppBar","Toolbar","edge","Typography","variant","noWrap","ru","en","he","fetchQuotes","Object","keys","forEach","key","fetchQuotesByTags","tag","fetchQuoteAsync","searchByTagAsync","quoteSlice","skip","counter","quotesByTags","statusByTags","increment","decrementCounter","count","length","selectQuotes","quote","selectCount","selectSkip","selectCounter","selectQuotesFetchedByTags","selectStatusByTags","Loading","size","getByLang","Quote","children","Text","design","type","Context","rtl","html","context","contextRtl","contextLtl","dangerouslySetInnerHTML","__html","Tags","tags","tagsContainer","Chip","label","Flags","flags","flagsContainer","flag","ind","alt","src","QuoteWrapper","reduce","acc","cur","author","useEffect","container","ButtonsController","Button","disabled","previous","next","edit","icon","ButtonControllers","decrementDisabled","incrementDisabled","getState","Home","editQuoteAsync","args","put","addQuoteAsync","post","quoteFormSlice","editStatus","addStatus","cleanResultFor","addResult","editResult","selectEditStatus","quoteForm","selectEditResult","selectAddStatus","selectAddResult","alert","bottom","zIndex","MyAlert","Portal","Alert","severity","AlertTitle","DELIMETER","reactHookController","marginTop","TextFieldController","path","multiline","isArray","control","defaultValue","join","render","field","TextField","fields","QuoteForm","useForm","handleSubmit","handleOnCloseAlert","onSubmit","formData","newQuote","books","split","contextAuthors","sources","formatData","handleEdit","handleAdd","form","cnt","fullWidth","Edit","Add","wrapper","text","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","NoResults","NoResultsSvg","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","secondary","Searched","searchedQuotes","quotesFetchedByTags","expanded","setExpanded","index","Accordion","panel","isExpanded","AccordionSummary","expandIcon","AccordionDetails","getResult","THEME","createMuiTheme","App","ThemeProvider","messages","locale","exact","incrementAsync","counterSlice","decrement","incrementByAmount","store","configureStore","reducer","counterReducer","quoteReducer","contextMenuReducer","quoteFormReducer","searchBarReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"u6BACAA,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,OAAS,sBAAsB,QAAU,uBAAuB,YAAc,+CAA+C,UAAY,yBAAyB,MAAQ,qBAAqB,OAAS,sBAAsB,QAAU,uBAAuB,cAAgB,6BAA6B,WAAa,0BAA0B,WAAa,4B,oBCAxaD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,oBAAsB,kCAAkC,KAAO,mBAAmB,eAAiB,6BAA6B,kBAAoB,kC,wFCQ1JC,E,4SCRL,SAASC,IAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAA0B,SAACC,GAAD,OACnCC,YAAW,kBAAMD,EAAQ,CAAEE,KAAMJ,MAAW,S,SDMpCF,K,QAAAA,E,QAAAA,E,SAAAA,M,KAUZ,IAAMO,EAAiC,CACrCC,KAAMC,aAAaC,QAAQ,aAAeV,EAAcW,GACxDC,OAAQ,QAiBGC,GATiBC,YAC5B,qBAD4C,uCAE5C,WAAOZ,GAAP,eAAAa,EAAA,sEACyBd,EAAWC,GADpC,cACQc,EADR,yBAGSA,EAASV,MAHlB,2CAF4C,uDASdW,YAAY,CAC1CC,KAAM,cACNX,eAEAY,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMb,KAAOc,EAAOC,QACpBd,aAAae,QAAQ,WAAYF,EAAOC,WAK5CE,cAAe,SAACC,QAYHN,EAAYP,EAAiBc,QAA7BP,QAKFQ,EAAa,SAACP,GAAD,OAAsBA,EAAMQ,YAAYrB,MAcnDK,IAAf,QE7EaiB,EAAiB,kBAAMC,eACvBC,EAAkDC,I,OCWzDC,EAAyB,CAC7B,CACEhB,KAAM,UACNiB,IAAKnC,EAAcoC,IAErB,CACElB,KAAM,UACNiB,IAAKnC,EAAcqC,IAErB,CACEnB,KAAM,SACNiB,IAAKnC,EAAcW,KAgDR2B,MAvCf,SAA8BC,GAC5B,IAAMC,EAAWT,cACTU,EAA6DF,EAA7DE,uBAAwBC,EAAqCH,EAArCG,iCAEhC,EAAwCC,mBAASX,EAAeJ,IAAhE,mBAAOgB,EAAP,KAAqBC,EAArB,KAOA,OACE,eAACC,EAAA,EAAD,CACEC,MAAM,EACNC,QAAS,WACPN,IACAD,KAEFQ,kBAAgB,yBANlB,UAQE,cAACC,EAAA,EAAD,CAAaC,GAAG,yBAAhB,6BACA,cAACC,EAAA,EAAD,CAAMC,UAAWC,IAAOC,KAAxB,SACGrB,EAAUsB,KAAI,SAACC,GAAD,OACb,cAACC,EAAA,EAAD,CACEC,QAAM,EACNN,UAAWC,IAAOM,SAClBC,QAAS,CAAEC,SAAUR,IAAOS,kBAC5BD,SAAUlB,IAAiBa,EAAStB,IACpC6B,QAAS,kBAtBG,SAACP,GACrBjB,EAASpB,EAAQqC,EAAStB,MAC1BU,EAAgBY,EAAStB,KAoBF8B,CAAcR,IAL/B,SAQE,cAACS,EAAA,EAAD,CAAcC,QAASV,EAASvC,QAF3BuC,EAASvC,e,SC9DbkD,EAUA,kBACT,cAAC,IAAD,CACEjB,GAAG,YACHkB,eAAe,YACfC,YAAY,eAdLF,EAiBH,kBACN,cAAC,IAAD,CACEjB,GAAG,SACHkB,eAAe,UACfC,YAAY,aArBLF,EAwBI,kBACb,cAAC,IAAD,CACEjB,GAAG,gBACHkB,eAAe,SACfC,YAAY,YCnBX,SAASC,EAAYhC,GAC1B,IAAQiC,EAAqCjC,EAArCiC,uBAAwBC,EAAalC,EAAbkC,SAC1BC,EAAUC,cAEhB,EACEhC,oBAAkB,GADpB,mBAAOiC,EAAP,KAA6BC,EAA7B,KAGMC,EAAc,WAClBN,EAAuB,OAGnB9B,EAAmC,WACvCmC,GAAyBD,IAQ3B,OACE,qCACE,eAACG,EAAA,EAAD,CACE5B,GAAG,eACHsB,SAAUA,EACVpB,UAAWC,IAAOzB,YAClBmD,aAAW,EACXjC,MAAM,EACNC,QAAS8B,EANX,UAQE,cAACG,EAAA,EAAD,CAAUjB,QAAStB,EAAnB,SACG0B,MAEH,cAACa,EAAA,EAAD,CAAUjB,QAlBU,WACxBU,EAAQQ,KAAK,QACbJ,KAgBI,SACGV,SAGJQ,GACC,cAAC,EAAD,CACElC,iCAAkCA,EAClCD,uBAAwBqC,O,gCCnDnBK,GADDC,EAAQ,KACDC,OAAO,CAC1BC,QAAS,kCACTC,QAAS,IACTC,QAAS,CACP,8BAA+B,kCAC/B,+BAAgC,uCCJ7B,SAASC,GAAkBC,GAChC,OAAOP,GAAMQ,IAAN,wBAA2BD,ICSpC,IAWaE,GAAyB9E,YACpC,0BADoD,uCAEpD,WAAO4E,GAAP,eAAA3E,EAAA,sEACyB0E,GAAkBC,GAD3C,cACQ1E,EADR,yBAESA,EAASV,MAFlB,2CAFoD,uDAQzCuF,GAAiB5E,YAAY,CACxCC,KAAM,YACNX,aArB+B,CAC/BmF,MAAO,GACP9E,OAAQ,OACRkF,OAAQ,GACRC,aAAa,GAkBb5E,SAAU,CACR6E,eAAgB,SAAC3E,EAAOC,GACtBD,EAAM0E,YAAczE,EAAOC,UAG/BE,cAAe,SAACC,GACdA,EACGuE,QAAQL,GAAuBM,SAAS,SAAC7E,GACxCA,EAAMT,OAAS,aAEhBqF,QAAQL,GAAuBO,WAAW,SAAC9E,EAAOC,GACjDD,EAAMT,OAAS,OACfS,EAAMyE,OAASxE,EAAOC,QAAQ6E,WAKvBJ,GAAmBH,GAAelE,QAAlCqE,eAEFK,GAAuB,SAAChF,GAAD,OAClCA,EAAMiF,UAAUR,QACLS,GAAoB,SAAClF,GAAD,OAC/BA,EAAMiF,UAAUP,aACLS,GAAe,SAACnF,GAAD,OAAsBA,EAAMiF,UAAU1F,QAEnDiF,MAAf,Q,+BC1CMY,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAO,aACLC,SAAU,WACVC,aAAcJ,EAAMK,MAAMD,aAC1BE,gBAAiBC,aAAKP,EAAMQ,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,aAAKP,EAAMQ,QAAQC,OAAOC,MAAO,MAEpDC,YAAaX,EAAMY,QAAQ,GAC3BC,WAAY,EACZC,MAAO,QACNd,EAAMe,YAAYC,GAAG,MAAQ,CAC5BH,WAAYb,EAAMY,QAAQ,GAC1BE,MAAO,SAGXG,WAAY,CACVC,QAASlB,EAAMY,QAAQ,EAAG,GAC1BO,OAAQ,OACRhB,SAAU,WACViB,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTR,QAASlB,EAAMY,QAAQ,EAAG,EAAG,EAAG,GAEhCe,YAAY,cAAD,OAAgB3B,EAAMY,QAAQ,GAA9B,OACXgB,WAAY5B,EAAM6B,YAAYnD,OAAO,SACrCoC,MAAO,QACNd,EAAMe,YAAYC,GAAG,MAAQ,CAC5BF,MAAO,cAMR,SAASgB,KACd,IAAM5E,EAAU4C,KACVjE,EAAWV,IACX4C,EAAUC,cAEVoB,EAAc/D,EAAeuE,IAE/BR,GAA6C,cAA9BrB,EAAQgE,SAASC,SAClCjE,EAAQQ,KAAK,aACHa,GAA6C,cAA9BrB,EAAQgE,SAASC,UAC1CjE,EAAQQ,KAAK,KAWf,OACE,sBAAK7B,UAAWQ,EAAQgD,OAAxB,UACE,qBAAKxD,UAAWQ,EAAQ+D,WAAxB,SACE,cAAC,KAAD,MAEF,cAACgB,GAAA,EAAD,CACEC,SAdiB,SAACC,GACtB,IAAMpD,EAAQoD,EAAMC,OAAOC,MAC3BC,QAAQC,IAAI,SAAUxD,GAEtBlD,EAASwD,KADqB,KAAVN,KAEpBlD,EAASoD,GAAuBF,KAU5ByD,YAAY,eACZtF,QAAS,CACPuF,KAAMvF,EAAQsE,UACdkB,MAAOxF,EAAQwE,YAEjBiB,WAAY,CAAE,aAAc,eC3EpC,IAAM7C,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX2C,KAAM,CACJC,SAAU,EACV1C,SAAU,SACV2C,IAAK,EACL,WAAY,CACVxC,gBAAiB,qBAGrByC,WAAY,CACVpC,YAAaX,EAAMY,QAAQ,IAE7BoC,MAAM,aACJ3B,QAAS,QACRrB,EAAMe,YAAYC,GAAG,MAAQ,CAC5BK,QAAS,UAGb4B,eAAe,aACb5B,QAAS,QACRrB,EAAMe,YAAYC,GAAG,MAAQ,CAC5BK,QAAS,SAGb6B,cAAc,aACZ7B,QAAS,QACRrB,EAAMe,YAAYC,GAAG,MAAQ,CAC5BK,QAAS,cAgLF8B,OA1Kf,WACE,IAAMjG,EAAU4C,KACV/B,EAAUC,cAChB,EAAgChC,mBAA6B,MAA7D,mBAAO8B,EAAP,KAAiBsF,EAAjB,KACA,EACEC,IAAMrH,SAA6B,MADrC,mBAAOsH,EAAP,KAA2BC,EAA3B,KAGA,EACEvH,mBAA6B,MAD/B,mBAAOwH,EAAP,KAA4B3F,EAA5B,KAGM4F,EAAaC,QAAQ5F,GACrB6F,EAAmBD,QAAQJ,GAC3BM,EAAoBF,QAAQF,GAE5BK,EAAwB,SAAC1B,GAC7BiB,EAAYjB,EAAM2B,gBAGdC,EAAwB,WAC5BR,EAAsB,OAGlBS,EAAkB,WACtBZ,EAAY,MACZW,KAOIE,EAAS,8BACTC,EACJ,eAAC9F,EAAA,EAAD,CACEN,SAAUA,EACVqG,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C7H,GAAIyH,EACJ5F,aAAW,EACXiG,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChDjI,KAAMqH,EACNpH,QAAS2H,EAPX,UASE,cAAC1F,EAAA,EAAD,CAAUjB,QAAS2G,EAAnB,qBACA,cAAC1F,EAAA,EAAD,CAAUjB,QAAS2G,EAAnB,2BAIEO,EAAe,qCACfC,EACJ,cAACpG,EAAA,EAAD,CACEN,SAAUwF,EACVa,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C7H,GAAI+H,EACJlG,aAAW,EACXiG,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChDjI,KAAMuH,EACNtH,QAAS0H,EAPX,SAyBE,eAACzF,EAAA,EAAD,CAAUjB,QAASwG,EAAnB,UACE,cAACY,EAAA,EAAD,CACEC,aAAW,0BACXC,gBAAc,8BACdC,gBAAc,OACdnD,MAAM,UAJR,SAME,cAAC,IAAD,MAEF,6CAYN,OACE,sBAAK/E,UAAWQ,EAAQ0F,KAAxB,UACE,cAACiC,EAAA,EAAD,CAAQ1E,SAAS,SAAjB,SACE,eAAC2E,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,CACEM,KAAK,QACLrI,UAAWQ,EAAQ6F,WACnBtB,MAAM,UACNiD,aAAW,cACXrH,QAhBoB,SAAC8E,GAC7BtE,EAAuBsE,EAAM2B,gBAUvB,SAOE,cAAC,IAAD,MAEF,cAACW,EAAA,EAAD,CACEM,KAAK,QACLrI,UAAWQ,EAAQ6F,WACnBtB,MAAM,UACNiD,aAAW,gBACXrH,QArBiB,WACzBU,EAAQQ,KAAK,MAeP,SAOE,cAAC,KAAD,MAEF,cAACyG,EAAA,EAAD,CAAYtI,UAAWQ,EAAQ8F,MAAOiC,QAAQ,KAAKC,QAAM,EAAzD,SACGzH,MAGF,cAACqE,GAAD,IACD,qBAAKpF,UAAWQ,EAAQ0F,OACxB,qBAAKlG,UAAWQ,EAAQ+F,eAAxB,SAWE,cAACwB,EAAA,EAAD,CACEM,KAAK,MACLL,aAAW,0BACXC,gBAAeV,EACfW,gBAAc,OACdvH,QAASwG,EACTpC,MAAM,UANR,SAQE,cAAC,IAAD,QAGJ,qBAAK/E,UAAWQ,EAAQgG,cAAxB,SACE,cAACuB,EAAA,EAAD,CACEC,aAAW,YACXC,gBAAeJ,EACfK,gBAAc,OACdvH,QA3HiB,SAAC8E,GAC5BoB,EAAsBpB,EAAM2B,gBA2HlBrC,MAAM,UALR,SAOE,cAAC,IAAD,aAKP+C,EACAN,EACAN,GACC,cAAChG,EAAD,CACEC,uBAAwBA,EACxBC,SAAU0F,Q,UClNL,IAAE2B,G,OAAIC,G,OAAIC,G,8CCDlB,SAASC,GAAY1J,GAC1B,IAAImD,EAAQ,IAIZ,OAHAwG,OAAOC,KAAK5J,GAAO6J,SAAQ,SAACC,GAC1B3G,GAAK,UAAO2G,EAAP,YAAc9J,EAAM8J,GAApB,QAEAlH,GAAMQ,IAAN,iBAAoBD,EAApB,YAGF,SAAS4G,GAAkB/J,GAChC,OAAO4C,GAAMQ,IAAN,sBAAyBpD,EAAM/B,KAA/B,aAAwC+B,EAAMgK,MCevD,IAmBaC,GAAkB1L,YAC7B,oBAD6C,uCAE7C,WAAOyB,GAAP,eAAAxB,EAAA,sEACyBkL,GAAY1J,GADrC,cACQvB,EADR,yBAESA,EAASV,MAFlB,2CAF6C,uDASlCmM,GAAmB3L,YAC9B,yBAD8C,uCAE9C,WAAOyB,GAAP,eAAAxB,EAAA,sEACyBuL,GAAkB/J,GAD3C,cACQvB,EADR,yBAESA,EAASV,MAFlB,2CAF8C,uDAQnCoM,GAAazL,YAAY,CACpCC,KAAM,QACNX,aAtC+B,CAC/BuF,OAAQ,GACR6G,KAAM,EACNC,QAAS,EACThM,OAAQ,OACRiM,aAAc,GACdC,aAAc,QAiCd3L,SAAU,CACR4L,UAAW,SAAC1L,GACVA,EAAMuL,SAAW,GAEnBI,iBAAkB,SAAC3L,GACjBA,EAAMuL,SAAW,IASrBnL,cAAe,SAACC,GACdA,EACGuE,QAAQuG,GAAgBtG,SAAS,SAAC7E,GACjCA,EAAMT,OAAS,aAEhBqF,QAAQuG,GAAgBrG,WAAW,SAAC9E,EAAOC,GAC1CD,EAAMT,OAAS,OACfS,EAAMyE,OAAN,uBAAmBzE,EAAMyE,QAAzB,aAAoCxE,EAAOC,QAAQ6E,OACnD/E,EAAM4L,MAAQ3L,EAAOC,QAAQ0L,MAC7B5L,EAAMsL,MAAQrL,EAAOC,QAAQ6E,KAAK8G,UAEnCjH,QAAQwG,GAAiBvG,SAAS,SAAC7E,GAClCA,EAAMyL,aAAe,aAEtB7G,QAAQwG,GAAiBtG,WAAW,SAAC9E,EAAOC,GAC3CD,EAAMyL,aAAe,OACrBzL,EAAMwL,aAAevL,EAAOC,QAAQ6E,WAKrC,GAAwCsG,GAAW/K,QAA3CoL,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,iBAKbG,GAAe,SAAC9L,GAAD,OAAsBA,EAAM+L,MAAMtH,QACjDU,GAAe,SAACnF,GAAD,OAAsBA,EAAM+L,MAAMxM,QACjDyM,GAAc,SAAChM,GAAD,OAAsBA,EAAM+L,MAAMH,OAChDK,GAAa,SAACjM,GAAD,OAAsBA,EAAM+L,MAAMT,MAC/CY,GAAgB,SAAClM,GAAD,OAAsBA,EAAM+L,MAAMR,SAClDY,GAA4B,SAACnM,GAAD,OAAsBA,EAAM+L,MAAMP,cAC9DY,GAAqB,SAACpM,GAAD,OAAsBA,EAAM+L,MAAMN,cAsBrDJ,MAAf,Q,wCC5HegB,GAJC,SAACnL,GAAD,OACd,cAAC,wBAAD,cAAsBoL,KAJI,QAIgBvF,MAHf,oBAGyC7F,KCPvD,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCInCqL,GAAY,SAACpN,GACjB,OAAQA,GACN,IAAK,KACH,OAAOsL,GACT,IAAK,KACH,OAAOC,GACT,IAAK,KACH,OAAOC,K,kCCTb,SAAS6B,GAAT,GACE,OAD2B,EAAZC,SAIjBD,GAAME,KCEN,YAAgE,IAA1CC,EAAyC,EAA/CC,KAAcH,EAAiC,EAAjCA,SAC5B,OAAO,oBAAGzK,UAAWC,KAAO0K,GAArB,cAAgCF,EAAhC,QDFTD,GAAMK,QEEN,YAA2E,IAAD,IAAvDC,WAAuD,SAA1CC,EAA0C,EAA1CA,KAC9B,OADwE,EAApCN,SAElC,qBACEzK,UAAS,UAAKC,KAAO+K,QAAZ,YACPF,EAAM7K,KAAOgL,WAAahL,KAAOiL,YAEnCC,wBAAyB,CAAEC,OAAQL,GAAQ,OFPjDP,GAAMa,KGEN,YAAiE,IAAjDC,EAAgD,EAAhDA,KAAM3K,EAA0C,EAA1CA,QACpB,OAD8D,EAAjC8J,SAE3B,qBAAKzK,UAAWC,KAAOsL,cAAvB,SACGD,EAAKnL,KAAI,SAAC+I,GAAD,OACR,cAACsC,GAAA,EAAD,CAAgBC,MAAOvC,EAAKvI,QAAS,kBAAMA,EAAQuI,KAAxCA,SHLnBsB,GAAMkB,MIDN,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOhL,EAAiC,EAAjCA,QACtB,OACE,qBAAKX,UAAWC,KAAO2L,eAAvB,SACGD,EAAMxL,KAAI,SAAC0L,EAAMC,GAAP,OACT,qBAEEC,IAAKF,EAAKhO,KACVuG,MAAO,GACPK,OAAQ,GACRuH,IAAKH,EAAKG,IACVrL,QAAS,kBAAMA,EAAQkL,EAAKhO,QAN9B,UACUgO,EAAKhO,KADf,YACuBiO,UJFhBtB,UK4BAyB,OA7Bf,WACE,IAAMxJ,EAAS9D,EAAemL,IACxBP,EAAU5K,EAAeuL,IACzB/M,EAAOwB,EAAeJ,GAEtB8C,EAAUC,cAEVyI,EAAQtH,EAAO8G,GACfoC,EAAiB5B,EAAMlL,UNHnBqN,QAAO,SAACC,EAAKC,GAKrB,OAJAD,EAAItK,KAAK,CACPmK,IAAKzB,GAAU6B,GACfvO,KAAMuO,IAEDD,IACN,IMFGhN,EAAWT,cASjB,OACE,eAAC,GAAD,WACE,cAAC,GAAMgM,KAAP,CAAYE,KAAK,QAAjB,SAA0Bb,EAAMzD,MAAMnJ,KACtC,eAAC,GAAMuN,KAAP,CAAYE,KAAK,SAAjB,cAA4Bb,EAAMsC,OAAOlP,MACzC,cAAC,GAAM0N,QAAP,CAAeC,IAAc,OAAT3N,EAAe4N,KAAMhB,EAAMiB,QAAQ7N,KACvD,cAAC,GAAMuO,MAAP,CAAaC,MAAOA,EAAOhL,QAZN,SAACxD,GAAD,OAAyBgC,EAASpB,EAAQZ,OAa/D,cAAC,GAAMkO,KAAP,CAAYC,KAAMvB,EAAMuB,KAAKnO,GAAOwD,QAXf,SAACuI,GACxB/J,EAASiK,GAAiB,CAACF,MAAK/L,UAChCkE,EAAQQ,KAAK,oBCXV,SAAS2I,KACd,IAAMjN,EAASoB,EAAewE,IACxBV,EAAS9D,EAAemL,IACxBP,EAAU5K,EAAeuL,IACzBZ,EAAO3K,EAAesL,IACtB9K,EAAWV,IAEjB6N,qBAAU,WACRnN,EACEgK,GAAgB,CAEdG,KAAMA,OAGT,IAWH,OACE,qBAAKtJ,UAAWC,KAAOsM,UAAvB,SAJkB,YAAXhP,GAAwBkF,EAAO8G,GAKzB,cAAC,GAAD,IAAmB,cAAC,GAAD,M,wFCvCpC,SAASiD,GAAT,GACE,OADuC,EAAZ/B,SAI7B+B,GAAkBC,OCUlB,YAOwB,IANtBC,EAMqB,EANrBA,SACAC,EAKqB,EALrBA,SACAC,EAIqB,EAJrBA,KACAC,EAGqB,EAHrBA,KACAlM,EAEqB,EAFrBA,QACA8J,EACqB,EADrBA,SAEA,OACE,eAAC1C,EAAA,EAAD,CACE/H,UAAWC,KAAO6M,KAClB9E,aAAW,kBACX0E,SAAUA,EACV/L,QAASA,EAJX,UAMGgM,GAAY,cAAC,KAAD,IACZC,GAAQ,cAAC,KAAD,IACRC,GAAQ,cAAC,KAAD,IACRpC,MD3BQ+B,UEqCAO,OAjCf,WACE,IAAMxD,EAAU5K,EAAeuL,IACzBN,EAAQjL,EAAeqL,IAEvB7K,EAAWV,IACX4C,EAAUC,cAEV0L,EAAoBzD,GAAW,EAC/B0D,IAAoBrD,GAAQL,IAAYK,EAAQ,EAMtD,OACE,eAAC,GAAD,WACE,cAAC,GAAkB6C,OAAnB,CACEE,UAAQ,EACRD,SAAUM,EACVrM,QAAS,kBAAMxB,EAASwK,SAG1B,cAAC,GAAkB8C,OAAnB,CACEG,MAAI,EACJF,SAAUO,EACVtM,QAAS,kBAAMxB,GfgFe,SAACA,EAAU+N,GAC/C,IAAMlP,EAAQkP,IACRzK,EAASqH,GAAa9L,GACtBuL,EAAUW,GAAclM,GACxBsL,EAAOW,GAAWjM,GACpBuL,GAAW9G,EAAOoH,OAAS,GAC7B1K,EACEgK,GAAgB,CAEdG,KAAMA,KAGVnK,EAASuK,OAETvK,EAASuK,Ye3FP,cAAC,GAAkB+C,OAAnB,CAA0BI,MAAI,EAAClM,QAlBX,WACtBU,EAAQQ,KAAK,gBCPFsL,OAXf,WACE,OACE,qCACE,cAAC,GAAD,IACA,qBAAKnN,UAAU,oBAAf,SACE,cAAC,GAAD,UCER,IAKaoN,GAAiB3P,YAC5B,kBAD4C,uCAE5C,WAAO4P,GAAP,eAAA3P,EAAA,sEChBwBoC,EDiBWuN,EAAKvN,GCjBJiK,EDiBQsD,EAAKtD,MChB1CjI,GAAMwL,IAAN,kBAAqBxN,GAAMiK,GDelC,cACQpM,EADR,yBAESA,EAASV,MAFlB,iCChBK,IAAmB6C,EAAYiK,IDgBpC,OAF4C,uDAQjCwD,GAAgB9P,YAC3B,iBAD2C,uCAE3C,WAAO4P,GAAP,eAAA3P,EAAA,sECrBuBqM,EDsBWsD,EAAKtD,MCrBhCjI,GAAM0L,KAAN,UAAsBzD,GDoB7B,cACQpM,EADR,yBAESA,EAASV,MAFlB,iCCrBK,IAAkB8M,IDqBvB,OAF2C,uDAQhC0D,GAAiB7P,YAAY,CACxCC,KAAM,YACNX,aAvBmC,CACnCwQ,WAAY,OACZC,UAAW,QAsBX7P,SAAU,CACR8P,eAAgB,SAAC5P,EAAOC,GACC,QAAnBA,EAAOC,QACTF,EAAM6P,UAAY,KAElB7P,EAAM8P,WAAa,OAIzB1P,cAAe,SAACC,GACdA,EACGuE,QAAQwK,GAAevK,SAAS,SAAC7E,GAChCA,EAAM0P,WAAa,aAEpB9K,QAAQwK,GAAetK,WAAW,SAAC9E,EAAOC,GACzCD,EAAM0P,WAAa,OACnB1P,EAAM8P,WAAa7P,EAAOC,WAE3B0E,QAAQ2K,GAAc1K,SAAS,SAAC7E,GAC/BA,EAAM2P,UAAY,aAEnB/K,QAAQ2K,GAAczK,WAAW,SAAC9E,EAAOC,GACxCD,EAAM2P,UAAY,OAClB3P,EAAM6P,UAAY5P,EAAOC,cAKlB0P,GAAmBH,GAAenP,QAAlCsP,eAGFG,GAAmB,SAAC/P,GAAD,OAC9BA,EAAMgQ,UAAUN,YACLO,GAAmB,SAACjQ,GAAD,OAC9BA,EAAMgQ,UAAUF,YACLI,GAAkB,SAAClQ,GAAD,OAAsBA,EAAMgQ,UAAUL,WACxDQ,GAAkB,SAACnQ,GAAD,OAAsBA,EAAMgQ,UAAUH,WAEtDJ,MAAf,Q,4DEnEMrK,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6K,MAAO,CACL3K,SAAU,SACV4K,OAAQ,EACRjK,MAAO,OACPkK,OAAQ,QAkBCC,GAbC,SAAC,GAA2B,IAAzB5O,EAAwB,EAAxBA,QAAS8K,EAAe,EAAfA,SACpBjK,EAAU4C,KAEhB,OACE,cAACoL,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOC,SAAS,UAAU1O,UAAWQ,EAAQ4N,MAAOzO,QAASA,EAA7D,UACE,cAACgP,GAAA,EAAD,sBACClE,Q,oBCxBImE,GAAY,KCOnBxL,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXsL,oBAAqB,CACnBC,UAAW,MACX,QAAS,CACP1K,MAAO,cAeA,SAAS2K,GAAoB7P,GAC1C,IAAMsB,EAAU4C,KACR4L,EAAoD9P,EAApD8P,KAAMvD,EAA8CvM,EAA9CuM,MAAOwD,EAAuC/P,EAAvC+P,UAAWC,EAA4BhQ,EAA5BgQ,QAASnF,EAAmB7K,EAAnB6K,MAAOoF,EAAYjQ,EAAZiQ,QAC1CC,EAAeF,EACjB5M,eAAIyH,EAAOiF,EAAM,IAAIK,KAAKT,IAC1BtM,eAAIyH,EAAOiF,EAAM,IAErB,OACE,qBAAKhP,UAAWQ,EAAQqO,oBAAxB,SACE,cAAC,KAAD,CACEhR,KAAMmR,EACNG,QAASA,EACTC,aAAcA,EACdE,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,GAAA,EAAD,cACE/D,MAAOA,EACPwD,UAAWA,EACXlM,KAAMkM,EAAY,EAAI,EACtB1G,QAAQ,YACJgH,S,cCzBVE,GAAS,CACb,CAAET,KAAM,WAAYvD,MAAO,mBAC3B,CAAEuD,KAAM,WAAYvD,MAAO,kBAC3B,CAAEuD,KAAM,WAAYvD,MAAO,mBAC3B,CAAEuD,KAAM,aAAcvD,MAAO,oBAAqBwD,WAAW,GAC7D,CAAED,KAAM,aAAcvD,MAAO,mBAAoBwD,WAAW,GAC5D,CAAED,KAAM,aAAcvD,MAAO,oBAAqBwD,WAAW,GAC7D,CAAED,KAAM,YAAavD,MAAO,oBAC5B,CAAEuD,KAAM,YAAavD,MAAO,mBAC5B,CAAEuD,KAAM,YAAavD,MAAO,oBAC5B,CAAEuD,KAAM,QAASvD,MAAO,QAASyD,SAAS,GAC1C,CAAEF,KAAM,YAAavD,MAAO,YAAayD,SAAS,GAClD,CAAEF,KAAM,iBAAkBvD,MAAO,kBAAmByD,SAAS,GAC7D,CAAEF,KAAM,UAAWvD,MAAO,UAAWyD,SAAS,GAC9C,CAAEF,KAAM,UAAWvD,MAAO,iBAAkByD,SAAS,GACrD,CAAEF,KAAM,UAAWvD,MAAO,gBAAiByD,SAAS,GACpD,CAAEF,KAAM,UAAWvD,MAAO,iBAAkByD,SAAS,IAGhD,SAASQ,KACd,IAAMjN,EAAS9D,EAAemL,IACxBP,EAAU5K,EAAeuL,IACzBwD,EAAa/O,EAAeoP,IAC5BD,EAAanP,EAAesP,IAC5BN,EAAYhP,EAAeuP,IAC3BL,EAAYlP,EAAewP,IAC3BhP,EAAWV,IAGXR,EAAuC,UAF7BqD,cAEO+D,SAASC,SAAuB,OAAS,MAC1DyE,EAAmB,SAAX9L,GAAoBwE,EAAO8G,IAAiB,GAE1D,EAAkCoG,eAA1BR,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,aAWXC,EAAqB,WAEzB1Q,EAASyO,GADKC,EAAY,MAAQ,UAI9BiC,EAAW,SAACC,GAChB,IAAMC,EFpEgB,SAACD,GAAD,MAAe,CACvCzJ,MAAOyJ,EAASzJ,MAChB0E,QAAS+E,EAAS/E,QAClBqB,OAAQ0D,EAAS1D,OACjB4D,MAAOF,EAASE,MAAMC,MAAMtB,IAC5B/P,UAAWkR,EAASlR,UAAUqR,MAAMtB,IACpCuB,eAAgBJ,EAASI,eAAeD,MAAMtB,IAC9CwB,QAASL,EAASK,QAAQF,MAAMtB,IAChCtD,KAAM,CACJ7C,GAAIsH,EAASzE,KAAK7C,GAAGyH,MAAMtB,IAC3BjG,GAAIoH,EAASzE,KAAK3C,GAAGuH,MAAMtB,IAC3BlG,GAAIqH,EAASzE,KAAK5C,GAAGwH,MAAMtB,MEyDVyB,CAAWN,GACjB,SAAX9R,EAhBiB,SAAC+R,GAClB,IAAMlQ,EAAMiK,EAAiBjK,GAC7BX,EAASiO,GAAe,CAAEtN,KAAIiK,MAAOiG,KAcjBM,CAAWN,GAXf,SAACjG,GACjB5K,EAASoO,GAAc,CAAExD,WAUkBwG,CAAUP,IAgCvD,OACE,qCAHqC,YAAftC,GAA0C,YAAdC,EAIjC,cAAC,GAAD,IA7Bf,uBAAM3N,UAAWC,KAAOuQ,KAAMV,SAAUF,EAAaE,GAArD,UACGL,GAAOtP,KAAI,SAACsQ,GAAD,OACV,cAAC1B,GAAD,CACEC,KAAMyB,EAAIzB,KACVvD,MAAOgF,EAAIhF,MACX1B,MAAOA,EACPoF,QAASA,EACTF,UAAWwB,EAAIxB,UACfC,QAASuB,EAAIvB,aAIjB,cAAC,KAAD,CACEtE,KAAK,SACL8F,WAAS,EACTpG,KAAK,QACL/B,QAAQ,YACRxD,MAAM,UALR,SAOG9G,OAWJ4P,GACC,cAAC,GAAD,CAAOlO,QAASkQ,EAAhB,oDAID/B,GACC,cAAC,GAAD,CAAOnO,QAASkQ,EAAhB,wDC7GO,SAASc,KACtB,OAAO,cAACjB,GAAD,ICDM,SAASkB,KACtB,OAAO,cAAClB,GAAD,I,uDCJM,OAA0B,sCCInCtM,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXsN,QAAS,CACP/B,UAAW,OAEbgC,KAAM,CACJC,WAAY,SACZC,UAAW,SACXC,WAAY,SACZC,SAAU,GACVC,WAAY,EACZpM,MAAO,gBAeEqM,OAVf,WACE,IAAM5Q,EAAU4C,KAChB,OACE,sBAAKpD,UAAWQ,EAAQqQ,QAAxB,UACE,qBAAK7E,IAAKqF,GAActF,IAAI,eAC5B,mBAAG/L,UAAWQ,EAAQsQ,KAAtB,mCCRA1N,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwC,KAAM,CACJ3B,MAAO,QAETkN,QAAS,CACPJ,SAAU5N,EAAMiO,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEdC,iBAAkB,CAChBT,SAAU5N,EAAMiO,WAAWC,QAAQ,IACnCzM,MAAOzB,EAAMQ,QAAQgN,KAAKc,gBAiEjBC,OA5Df,SAAkB3S,GAChB,IAAM4S,EAAiBnT,EAAeqE,IAChC+O,EAAsBpT,EAAewL,IACrC5M,EAASoB,EAAewE,IACxBsG,EAAe9K,EAAeyL,IAC9BjN,EAAOwB,EAAeJ,GACtBiC,EAAU4C,KAChB,EAAgCuD,IAAMrH,UAAyB,GAA/D,mBAAO0S,EAAP,KAAiBC,EAAjB,KA4CA,MAAkB,YAAX1U,GAAyC,YAAjBkM,EAC7B,cAAC,GAAD,IAC4B,IAA1BqI,EAAejI,QAA+C,IAA/BkI,EAAoBlI,OACrD,cAAC,GAAD,IAxCgB,WAChB,IAAM5M,EAAO8U,GAAuBD,EACpC,OACE,qBAAK9R,UAAWQ,EAAQuF,KAAxB,SACG9I,EAAKkD,KAAI,SAAC4J,EAAOmI,GAChB,OACE,eAACC,GAAA,EAAD,CAEEH,SAAUA,IAAaE,EACvB1M,UAbT4M,EAagCF,EAbd,SAACzM,EAA8B4M,GAChDJ,IAAYI,GAAaD,KASnB,UAKE,eAACE,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZtK,gBAAc,mBACdnI,GAAG,kBAHL,UAKE,cAACwI,EAAA,EAAD,CAAYtI,UAAWQ,EAAQ8Q,QAA/B,SACGvH,EAAMzD,MAAMnJ,KAEf,cAACmL,EAAA,EAAD,CAAYtI,UAAWQ,EAAQmR,iBAA/B,SACG5H,EAAMsC,OAAOlP,QAGlB,cAACqV,GAAA,EAAD,UACE,cAAClK,EAAA,EAAD,CACE6C,wBAAyB,CACvBC,OAAQrB,EAAMiB,QAAQ7N,IAAS,UAnBhC4M,EAAMjK,IAXrB,IAACsS,OA8CDK,IC5EEC,GAAQC,aAAe,CAC3BpB,WAAY,CACVR,WAAY,CACV,SACA,SACA,mBACA,QACA,cACA1B,KAAK,QAoCIuD,OAhCf,WACE,IAAMrT,EAAeZ,EAAeJ,GAEpC,OACE,cAACsU,GAAA,EAAD,CAAevP,MAAOoP,GAAtB,SACE,cAAC,KAAD,CAAcI,SAAUA,GAASvT,GAAewT,OAAQxT,EAAxD,SACE,cAAC,KAAD,UACE,cAAC,IAAD,UACE,qBAAKS,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAOgT,OAAK,EAAChE,KAAK,YAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,cAAC4B,GAAD,MAEF,cAAC,IAAD,CAAO5B,KAAK,QAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOgE,OAAK,EAAChE,KAAK,IAAlB,SACE,cAAC,GAAD,oBC9CX,SAASpS,KAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAA0B,SAACC,GAAD,OACnCC,YAAW,kBAAMD,EAAQ,CAAEE,KAAMJ,MAAW,QCMhD,IAUaoW,GAAiBxV,YAC5B,qBAD4C,uCAE5C,WAAOZ,GAAP,eAAAa,EAAA,sEACyBd,GAAWC,GADpC,cACQc,EADR,yBAGSA,EAASV,MAHlB,2CAF4C,uDASjCiW,GAAetV,YAAY,CACtCC,KAAM,UACNX,aArBiC,CACjCyI,MAAO,EACPpI,OAAQ,QAqBRO,SAAU,CACR4L,UAAW,SAAC1L,GAKVA,EAAM2H,OAAS,GAEjBwN,UAAW,SAACnV,GACVA,EAAM2H,OAAS,GAGjByN,kBAAmB,SAACpV,EAAOC,GACzBD,EAAM2H,OAAS1H,EAAOC,UAK1BE,cAAe,SAACC,GACdA,EACGuE,QAAQqQ,GAAepQ,SAAS,SAAC7E,GAChCA,EAAMT,OAAS,aAEhBqF,QAAQqQ,GAAenQ,WAAW,SAAC9E,EAAOC,GACzCD,EAAMT,OAAS,OACfS,EAAM2H,OAAS1H,EAAOC,cAKvB,GAAoDgV,GAAa5U,QAkBzD4U,IAlBR,GAAQxJ,UAAR,GAAmByJ,UAAnB,GAA8BC,kBAkBtBF,GAAf,SCzEaG,GAAQC,YAAe,CAClCC,QAAS,CACPhK,QAASiK,GACTzJ,MAAO0J,GACPjV,YAAakV,EACb1F,UAAW2F,GACX1Q,UAAW2Q,MCNfC,IAASvE,OACP,cAAC,IAAMwE,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJU,SAASC,eAAe,U,mBCZ1BvX,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,OAAS,uBAAuB,QAAU,wBAAwB,cAAgB,8BAA8B,WAAa,2BAA2B,WAAa,2BAA2B,eAAiB,iC,mBCAjQD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,0BAA0B,SAAW,8BAA8B,iBAAmB,yC","file":"static/js/main.7ca25285.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Quote_row__1dCkF\",\"value\":\"Quote_value__2gMFq\",\"button\":\"Quote_button__15GIs\",\"textbox\":\"Quote_textbox__M02Bv\",\"asyncButton\":\"Quote_asyncButton__-4Udb Quote_button__15GIs\",\"container\":\"Quote_container__1hCnI\",\"title\":\"Quote_title__3WotT\",\"author\":\"Quote_author__1e-YR\",\"context\":\"Quote_context__qZvd5\",\"tagsContainer\":\"Quote_tagsContainer__1jGy4\",\"contextRtl\":\"Quote_contextRtl__1OSyQ\",\"contextLtl\":\"Quote_contextLtl__1VL5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"styles_icon__17VB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactHookController\":\"Form_reactHookController__1kgo4\",\"form\":\"Form_form__2DDb_\",\"inputContainer\":\"Form_inputContainer__1kIXp\",\"textareaContainer\":\"Form_textareaContainer__1siuD\"};","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { fetchCount } from \"./contextMenuAPI\";\n\nexport interface ILanguage {\n  name: string;\n  abb: enumLanguages;\n}\n\nexport enum enumLanguages {\n  RU = \"ru\",\n  HE = \"he\",\n  EN = \"en\",\n}\nexport interface contextMenuState {\n  lang: enumLanguages | string;\n  status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: contextMenuState = {\n  lang: localStorage.getItem(\"language\") || enumLanguages.HE,\n  status: \"idle\",\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  \"counter/fetchCount\",\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const contextMenuSlice = createSlice({\n  name: \"contextMenu\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setLang: (state, action: PayloadAction<enumLanguages>) => {\n      state.lang = action.payload;\n      localStorage.setItem(\"language\", action.payload);\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    // builder\n    //   .addCase(incrementAsync.pending, (state) => {\n    //     state.status = 'loading';\n    //   })\n    //   .addCase(incrementAsync.fulfilled, (state, action) => {\n    //     state.status = 'idle';\n    //     state.value += action.payload;\n    //   });\n  },\n});\n\nexport const { setLang } = contextMenuSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectLang = (state: RootState) => state.contextMenu.lang;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount: number): AppThunk => (\n//   dispatch,\n//   getState\n// ) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport default contextMenuSlice.reducer;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  selectLang,\n  ILanguage,\n  enumLanguages,\n  setLang,\n} from \"./contextMenuSlice\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport styles from \"./ContextMenu.module.css\";\n\nconst languages: ILanguage[] = [\n  {\n    name: \"English\",\n    abb: enumLanguages.EN,\n  },\n  {\n    name: \"Russian\",\n    abb: enumLanguages.RU,\n  },\n  {\n    name: \"Hebrew\",\n    abb: enumLanguages.HE,\n  },\n];\n\ninterface ISelectLanguageDialog {\n  handleToggleOpenSelectLangDialog: () => void;\n  handleContextMenuClose: () => void;\n}\n\nfunction SelectLanguageDialog(props: ISelectLanguageDialog) {\n  const dispatch = useDispatch();\n  const { handleContextMenuClose, handleToggleOpenSelectLangDialog } = props;\n\n  const [selectedLang, setSelectedLang] = useState(useAppSelector(selectLang));\n\n  const handleSetLang = (language: ILanguage) => {\n    dispatch(setLang(language.abb));\n    setSelectedLang(language.abb);\n  };\n\n  return (\n    <Dialog\n      open={true}\n      onClose={() => {\n        handleToggleOpenSelectLangDialog();\n        handleContextMenuClose();\n      }}\n      aria-labelledby=\"select-langauge-dialog\"\n    >\n      <DialogTitle id=\"select-langauge-dialog\">Select Language</DialogTitle>\n      <List className={styles.list}>\n        {languages.map((language) => (\n          <ListItem\n            button\n            className={styles.listItem}\n            classes={{ selected: styles.listItemSelected }}\n            selected={selectedLang === language.abb}\n            onClick={() => handleSetLang(language)}\n            key={language.name}\n          >\n            <ListItemText primary={language.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nexport default SelectLanguageDialog;\n","import { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\n\nexport const SHARED_MESSAGES = {\n  next: () => (\n    <FormattedMessage id=\"next\" defaultMessage=\"Next\" description=\"Next\" />\n  ),\n  edit: () => (\n    <FormattedMessage id=\"edit\" defaultMessage=\"Edit\" description=\"Edit\" />\n  ),\n  send: () => (\n    <FormattedMessage id=\"send\" defaultMessage=\"Send\" description=\"Send\" />\n  ),\n  languages: () => (\n    <FormattedMessage\n      id=\"languages\"\n      defaultMessage=\"Languages\"\n      description=\"Languages\"\n    />\n  ),\n  addNew: () => (\n    <FormattedMessage\n      id=\"addNew\"\n      defaultMessage=\"Add New\"\n      description=\"Add New\"\n    />\n  ),\n  homePageTitle: () => (\n    <FormattedMessage\n      id=\"homePageTitle\"\n      defaultMessage=\"Quotes\"\n      description=\"Quotes\"\n    />\n  ),\n};\n","import React, { useState, SetStateAction, Dispatch } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"./ContextMenu.module.css\";\nimport SelectLanguageDialog from \"./SelectLanguageDialog\";\nimport { SHARED_MESSAGES } from \"../../lang/messages\";\n\ninterface IContextMenu {\n  setContextMenuAnchorEl: Dispatch<SetStateAction<HTMLElement | null>>;\n  anchorEl: HTMLElement | null;\n}\nexport function ContextMenu(props: IContextMenu) {\n  const { setContextMenuAnchorEl, anchorEl } = props;\n  const history = useHistory();\n\n  const [openSelectLangDialog, setOpenSelectLangDialog] =\n    useState<boolean>(false);\n\n  const handleClose = () => {\n    setContextMenuAnchorEl(null);\n  };\n\n  const handleToggleOpenSelectLangDialog = () => {\n    setOpenSelectLangDialog(!openSelectLangDialog);\n  };\n\n  const handleAddNewQuote = () => {\n    history.push(\"/add\");\n    handleClose();\n  };\n\n  return (\n    <>\n      <Menu\n        id=\"context-menu\"\n        anchorEl={anchorEl}\n        className={styles.contextMenu}\n        keepMounted\n        open={true}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleToggleOpenSelectLangDialog}>\n          {SHARED_MESSAGES.languages()}\n        </MenuItem>\n        <MenuItem onClick={handleAddNewQuote}>\n          {SHARED_MESSAGES.addNew()}\n        </MenuItem>\n      </Menu>\n      {openSelectLangDialog && (\n        <SelectLanguageDialog\n          handleToggleOpenSelectLangDialog={handleToggleOpenSelectLangDialog}\n          handleContextMenuClose={handleClose}\n        />\n      )}\n    </>\n  );\n}\n","const axios = require(\"axios\");\nexport default axios.create({\n  baseURL: \"http://quotes.cargatser.com/api\",\n  timeout: 1000,\n  headers: {\n    \"Access-Control-Allow-Origin\": \"http://quotes.cargatser.com/api\",\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\n  },\n});\n","import axios from \"../../app/axios\";\n\nexport function fetchQuoteByQuery(query: string) {\n  return axios.get(`/quotes?query=${query}`);\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { fetchQuoteByQuery } from \"./searchBarAPI\";\nimport { IQuote } from \"../quote/quoteSlice\";\n\nexport interface QuoteState {\n  query: string;\n  status: \"idle\" | \"loading\" | \"failed\";\n  quotes: IQuote[];\n  isSearching: boolean;\n}\n\nconst initialState: QuoteState = {\n  query: \"\",\n  status: \"idle\",\n  quotes: [],\n  isSearching: false,\n};\n\nexport interface IFetchQuoteAsync {\n  query: number;\n}\n\nexport const fetchQuoteByQueryAsync = createAsyncThunk(\n  \"quote/fetchQuoteByQuery\",\n  async (query: string) => {\n    const response = await fetchQuoteByQuery(query);\n    return response.data;\n  }\n);\n\nexport const searchBarSlice = createSlice({\n  name: \"searchBar\",\n  initialState,\n  reducers: {\n    setIsSearching: (state, action: PayloadAction<boolean>) => {\n      state.isSearching = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchQuoteByQueryAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchQuoteByQueryAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.quotes = action.payload.rows;\n      });\n  },\n});\n\nexport const { setIsSearching } = searchBarSlice.actions;\n\nexport const selectSearchedQuotes = (state: RootState) =>\n  state.searchBar.quotes;\nexport const selectIsSearching = (state: RootState) =>\n  state.searchBar.isSearching;\nexport const selectStatus = (state: RootState) => state.searchBar.status;\n\nexport default searchBarSlice.reducer;\n","import React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  fade,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport {\n  fetchQuoteByQueryAsync,\n  setIsSearching,\n  selectIsSearching,\n} from \"./searchBarSlice\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(3),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  })\n);\n\nexport function SearchBar() {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const isSearching = useAppSelector(selectIsSearching);\n\n  if (isSearching && history.location.pathname !== \"/searched\") {\n    history.push(\"/searched\");\n  } else if (!isSearching && history.location.pathname === \"/searched\") {\n    history.push(\"/\");\n  }\n\n  const handleOnSearch = (event) => {\n    const query = event.target.value;\n    console.log(\"query:\", query);\n    const isSearching = query === \"\";\n    dispatch(setIsSearching(!isSearching));\n    dispatch(fetchQuoteByQueryAsync(query));\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        onChange={handleOnSearch}\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { ContextMenu } from \"../features/contextMenu/ContextMenu\";\nimport { SHARED_MESSAGES } from \"../lang/messages\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { useHistory } from \"react-router-dom\";\nimport { SearchBar } from \"../features/searchBar/SearchBar\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n      position: \"sticky\",\n      top: 0,\n      \"& header\": {\n        backgroundColor: \"rgb(45, 76, 131)\",\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    sectionDesktop: {\n      display: \"none\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    sectionMobile: {\n      display: \"flex\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"none\",\n      },\n    },\n  })\n);\n\nfunction MyHeaderAppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n    React.useState<null | HTMLElement>(null);\n\n  const [contextMenuAnchorEl, setContextMenuAnchorEl] =\n    useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const isContextMenuOpen = Boolean(contextMenuAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  const handleContextMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setContextMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleOpenHomePage = () => {\n    history.push(\"/\");\n  };\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleContextMenuOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open hme page\"\n            onClick={handleOpenHomePage}\n          >\n            <HomeIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            {SHARED_MESSAGES.homePageTitle()}\n          </Typography>\n\n          {<SearchBar />}\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n      {isContextMenuOpen && (\n        <ContextMenu\n          setContextMenuAnchorEl={setContextMenuAnchorEl}\n          anchorEl={contextMenuAnchorEl}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default MyHeaderAppBar;\n","import ru from \"./ru.json\";\nimport en from \"./en.json\";\nimport he from \"./he.json\";\n\nexport default { ru, en, he };\n","import axios from \"../../app/axios\";\nimport { IFetchQuoteAsync, IFetchQuoteByTagAsync } from \"./quoteSlice\";\n\nexport function fetchQuotes(props: IFetchQuoteAsync) {\n  let query = \"?\";\n  Object.keys(props).forEach((key) => {\n    query += `${key}=${props[key]}&`;\n  });\n  return axios.get(`/quotes${query}limit=2`);\n}\n\nexport function fetchQuotesByTags(props: IFetchQuoteByTagAsync) {\n  return axios.get(`/quotes?tag=${props.lang}__${props.tag}`);\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { fetchQuotes, fetchQuotesByTags } from \"./quoteAPI\";\n\nexport interface IQuote {\n  id: string;\n  title: Record<string, string>;\n  context: Record<string, string>;\n  languages: [string];\n  tags: Record<string, [string]>;\n  author: Record<string, string>;\n  sources: [string];\n  contextAuthors: [string];\n  books: [string];\n  createdAt: string;\n  updatedAt: string;\n}\nexport interface QuoteState {\n  quotes: IQuote[];\n  quotesByTags: IQuote[];\n  count?: number;\n  counter: number;\n  skip: number;\n  status: \"idle\" | \"loading\" | \"failed\";\n  statusByTags: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: QuoteState = {\n  quotes: [],\n  skip: 0,\n  counter: 0,\n  status: \"idle\",\n  quotesByTags: [],\n  statusByTags: \"idle\",\n};\n\nexport interface IFetchQuoteAsync {\n  // lang: string,\n  skip: number;\n}\n\nexport interface IFetchQuoteByTagAsync {\n  tag: string;\n  lang: string;\n}\n\nexport const fetchQuoteAsync = createAsyncThunk(\n  \"quote/fetchQuotes\",\n  async (props: IFetchQuoteAsync) => {\n    const response = await fetchQuotes(props);\n    return response.data;\n  }\n);\n\n\nexport const searchByTagAsync = createAsyncThunk(\n  \"quote/fetchQuotesByTag\",\n  async (props: IFetchQuoteByTagAsync) => {\n    const response = await fetchQuotesByTags(props);\n    return response.data;\n  }\n);\n\nexport const quoteSlice = createSlice({\n  name: \"quote\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.counter += 1;\n    },\n    decrementCounter: (state) => {\n      state.counter -= 1;\n    },\n    // // Use the PayloadAction type to declare the contents of `action.payload`\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\n    //   state.value += action.payload;\n    // },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchQuoteAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchQuoteAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.quotes = [...state.quotes, ...action.payload.rows];\n        state.count = action.payload.count;\n        state.skip += action.payload.rows.length;\n      })\n      .addCase(searchByTagAsync.pending, (state) => {\n        state.statusByTags = \"loading\";\n      })\n      .addCase(searchByTagAsync.fulfilled, (state, action) => {\n        state.statusByTags = \"idle\";\n        state.quotesByTags = action.payload.rows;\n      });\n  },\n});\n\nexport const { increment, decrementCounter } = quoteSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectQuotes = (state: RootState) => state.quote.quotes;\nexport const selectStatus = (state: RootState) => state.quote.status;\nexport const selectCount = (state: RootState) => state.quote.count;\nexport const selectSkip = (state: RootState) => state.quote.skip;\nexport const selectCounter = (state: RootState) => state.quote.counter;\nexport const selectQuotesFetchedByTags = (state: RootState) => state.quote.quotesByTags;\nexport const selectStatusByTags = (state: RootState) => state.quote.statusByTags;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementCounter = () => (dispatch, getState) => {\n  const state = getState();\n  const quotes = selectQuotes(state);\n  const counter = selectCounter(state);\n  const skip = selectSkip(state);\n  if (counter >= quotes.length - 1) {\n    dispatch(\n      fetchQuoteAsync({\n        // lang: 'he',\n        skip: skip,\n      })\n    );\n    dispatch(increment());\n  } else {\n    dispatch(increment());\n  }\n};\n\nexport default quoteSlice.reducer;\n","import React from \"react\";\nimport { CircleToBlockLoading } from \"react-loadingg\";\n\nexport const DEFAULT_SIZE = \"large\";\nexport const DEFAULT_COLOR = \"rgb(45, 76, 131)\";\n\nconst Loading = (props) => (\n  <CircleToBlockLoading size={DEFAULT_SIZE} color={DEFAULT_COLOR} {...props} />\n);\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/he.aaf88d91.svg\";","export default __webpack_public_path__ + \"static/media/en.245ea6ca.svg\";","export default __webpack_public_path__ + \"static/media/ru.d2e92f97.svg\";","import he from \"./he.svg\";\nimport en from \"./en.svg\";\nimport ru from \"./ru.svg\";\n\nconst getByLang = (lang) => {\n  switch (lang) {\n    case \"ru\":\n      return ru;\n    case \"en\":\n      return en;\n    case \"he\":\n      return he;\n  }\n};\nexport const getFlags = (languages) =>\n  languages.reduce((acc, cur) => {\n    acc.push({\n      src: getByLang(cur),\n      name: cur,\n    });\n    return acc;\n  }, []);\n","import { Tags, Text, Context, Flags } from \"./components\";\n\nfunction Quote({ children }) {\n  return children;\n}\n\nQuote.Text = Text;\nQuote.Context = Context;\nQuote.Tags = Tags;\nQuote.Flags = Flags;\n\nexport default Quote;\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\ninterface IQuoteComponentText {\n  type: \"title\" | \"author\";\n  children: unknown;\n}\n\nfunction Text({ type: design, children }: IQuoteComponentText) {\n  return <p className={styles[design]}> {children} </p>;\n}\n\nexport { Text };\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\ninterface IQuoteComponentContext {\n  rtl?: boolean;\n  html?: string;\n  children?: unknown;\n}\n\nfunction Context({ rtl = false, html, children }: IQuoteComponentContext) {\n  return (\n    <div\n      className={`${styles.context} ${\n        rtl ? styles.contextRtl : styles.contextLtl\n      }`}\n      dangerouslySetInnerHTML={{ __html: html || \"\" }}\n    />\n  );\n}\n\nexport { Context };\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport Chip from \"@material-ui/core/Chip\";\n\ninterface IQuoteComponentTags {\n  tags: string[];\n  onClick: any;\n  children?: unknown;\n}\n\nfunction Tags({ tags, onClick, children }: IQuoteComponentTags) {\n  return (\n    <div className={styles.tagsContainer}>\n      {tags.map((tag) => (\n        <Chip key={tag} label={tag} onClick={() => onClick(tag)} />\n      ))}\n    </div>\n  );\n}\n\nexport { Tags };\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\ninterface IQuoteComponentFlags {\n  flags: any[];\n  onClick: any;\n}\n\nfunction Flags({ flags, onClick }: IQuoteComponentFlags) {\n  return (\n    <div className={styles.flagsContainer}>\n      {flags.map((flag, ind) => (\n        <img\n          key={`${flag.name}-${ind}`}\n          alt={flag.name}\n          width={24}\n          height={24}\n          src={flag.src}\n          onClick={() => onClick(flag.name)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport { Flags };\n","import React from \"react\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { selectQuotes, selectCounter, searchByTagAsync } from \"./quoteSlice\";\nimport { enumLanguages, selectLang } from \"../contextMenu/contextMenuSlice\";\nimport { getFlags } from \"../../utilites/flags\";\nimport Quote from \"../../common/CompoundQuote/Quote\";\nimport { useDispatch } from \"react-redux\";\nimport { setLang } from \"../contextMenu/contextMenuSlice\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction QuoteWrapper() {\n  const quotes = useAppSelector(selectQuotes);\n  const counter = useAppSelector(selectCounter);\n  const lang = useAppSelector(selectLang);\n\n  const history = useHistory();\n\n  const quote = quotes[counter];\n  const flags = getFlags(quote.languages);\n  const dispatch = useDispatch();\n\n  const handleChangeLang = (lang: enumLanguages) => dispatch(setLang(lang));\n\n  const handleOnTagClick = (tag: string) => {\n    dispatch(searchByTagAsync({tag, lang}));\n    history.push(\"/searched\");\n  }\n\n  return (\n    <Quote>\n      <Quote.Text type=\"title\">{quote.title[lang]}</Quote.Text>\n      <Quote.Text type=\"author\"> {quote.author[lang]}</Quote.Text>\n      <Quote.Context rtl={lang === \"he\"} html={quote.context[lang]} />\n      <Quote.Flags flags={flags} onClick={handleChangeLang} />\n      <Quote.Tags tags={quote.tags[lang]} onClick={handleOnTagClick} />\n    </Quote>\n  );\n}\n\nexport default QuoteWrapper;\n","import React, { useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  selectStatus,\n  selectQuotes,\n  selectCounter,\n  fetchQuoteAsync,\n  selectSkip,\n} from \"./quoteSlice\";\nimport styles from \"./Quote.module.css\";\nimport Loading from \"../../common/Loading\";\nimport ButtonControllers from \"./ButtonControllers\";\nimport QuoteWrapper from \"./QuoteWrapper\";\n\nexport function Quote() {\n  const status = useAppSelector(selectStatus);\n  const quotes = useAppSelector(selectQuotes);\n  const counter = useAppSelector(selectCounter);\n  const skip = useAppSelector(selectSkip);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(\n      fetchQuoteAsync({\n        // lang: selectedLang,\n        skip: skip,\n      })\n    );\n  }, []);\n\n  /**\n   * Checks if we ready to present data\n   * Return true if the status isn't loading\n   * and if we have quote to display\n   */\n  const ready = () => {\n    return status !== \"loading\" && quotes[counter];\n  };\n\n  return (\n    <div className={styles.container}>\n      {ready() ? <QuoteWrapper /> : <Loading />}\n    </div>\n  );\n}\n","import { Button } from \"./components\";\n\nfunction ButtonsController({ children }) {\n  return children;\n}\n\nButtonsController.Button = Button;\nexport default ButtonsController;\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\ninterface IButtonsController {\n  disabled?: boolean;\n  previous?: boolean;\n  next?: boolean;\n  edit?: boolean;\n  onClick: () => void;\n  children?: unknown;\n}\n\nfunction Button({\n  disabled,\n  previous,\n  next,\n  edit,\n  onClick,\n  children,\n}: IButtonsController) {\n  return (\n    <IconButton\n      className={styles.icon}\n      aria-label=\"button-controll\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {previous && <ArrowBackIcon />}\n      {next && <ArrowForwardIcon />}\n      {edit && <EditIcon />}\n      {children}\n    </IconButton>\n  );\n}\n\nexport { Button };\n","import React from \"react\";\nimport {\n  selectCounter,\n  selectCount,\n  incrementCounter,\n  decrementCounter,\n} from \"./quoteSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport ButtonsController from \"../../common/CompoundButtonsController/ButtonsController\";\n\nfunction ButtonControllers() {\n  const counter = useAppSelector(selectCounter);\n  const count = useAppSelector(selectCount);\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const decrementDisabled = counter <= 0;\n  const incrementDisabled = count ? counter === count - 1 : false;\n\n  const handleEditQuote = () => {\n    history.push(\"/edit\");\n  };\n\n  return (\n    <ButtonsController>\n      <ButtonsController.Button\n        previous\n        disabled={decrementDisabled}\n        onClick={() => dispatch(decrementCounter())}\n      />\n\n      <ButtonsController.Button\n        next\n        disabled={incrementDisabled}\n        onClick={() => dispatch(incrementCounter())}\n      />\n\n      <ButtonsController.Button edit onClick={handleEditQuote} />\n    </ButtonsController>\n  );\n}\n\nexport default ButtonControllers;\n","import React from \"react\";\nimport { Quote } from \"../features/quote/Quote\";\nimport ButtonControllers from '../features/quote/ButtonControllers'\n\nfunction Home() {\n  return (\n    <>\n      <Quote />\n      <div className=\"buttonsController\">\n        <ButtonControllers />\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { editQuote, addQuote } from \"./formAPI\";\n\nexport interface QuoteFormState {\n  editResult?: unknown;\n  editStatus: \"idle\" | \"loading\" | \"failed\";\n  addResult?: unknown;\n  addStatus: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: QuoteFormState = {\n  editStatus: \"idle\",\n  addStatus: \"idle\",\n};\n\nexport const editQuoteAsync = createAsyncThunk(\n  \"quote/editQuote\",\n  async (args: any) => {\n    const response = await editQuote(args.id, args.quote);\n    return response.data;\n  }\n);\n\nexport const addQuoteAsync = createAsyncThunk(\n  \"quote/addQuote\",\n  async (args: any) => {\n    const response = await addQuote(args.quote);\n    return response.data;\n  }\n);\n\nexport const quoteFormSlice = createSlice({\n  name: \"quoteForm\",\n  initialState,\n  reducers: {\n    cleanResultFor: (state, action: PayloadAction<string>) => {\n      if (action.payload === \"ADD\") {\n        state.addResult = null;\n      } else {\n        state.editResult = null;\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(editQuoteAsync.pending, (state) => {\n        state.editStatus = \"loading\";\n      })\n      .addCase(editQuoteAsync.fulfilled, (state, action) => {\n        state.editStatus = \"idle\";\n        state.editResult = action.payload;\n      })\n      .addCase(addQuoteAsync.pending, (state) => {\n        state.addStatus = \"loading\";\n      })\n      .addCase(addQuoteAsync.fulfilled, (state, action) => {\n        state.addStatus = \"idle\";\n        state.addResult = action.payload;\n      });\n  },\n});\n\nexport const { cleanResultFor } = quoteFormSlice.actions;\n\nexport const selectQuoteFormState = (state: RootState) => state.quoteForm;\nexport const selectEditStatus = (state: RootState) =>\n  state.quoteForm.editStatus;\nexport const selectEditResult = (state: RootState) =>\n  state.quoteForm.editResult;\nexport const selectAddStatus = (state: RootState) => state.quoteForm.addStatus;\nexport const selectAddResult = (state: RootState) => state.quoteForm.addResult;\n\nexport default quoteFormSlice.reducer;\n","import axios from \"../../app/axios\";\n\nexport function editQuote(id: string, quote: unknown) {\n  return axios.put(`/quotes/${id}`, quote);\n}\nexport function addQuote(quote: unknown) {\n  return axios.post(`/quotes`, quote);\n}\n","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport Portal from \"@material-ui/core/Portal\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    alert: {\n      position: \"sticky\",\n      bottom: 0,\n      width: \"auto\",\n      zIndex: 1,\n    },\n  })\n);\n\nconst MyAlert = ({ onClose, children }) => {\n  const classes = useStyles();\n\n  return (\n    <Portal>\n      <Alert severity=\"success\" className={classes.alert} onClose={onClose}>\n        <AlertTitle>Success</AlertTitle>\n        {children}\n      </Alert>\n    </Portal>\n  );\n};\n\nexport default MyAlert;\n","export const DELIMETER = \", \";\n\nexport const formatData = (formData) => ({\n  title: formData.title,\n  context: formData.context,\n  author: formData.author,\n  books: formData.books.split(DELIMETER),\n  languages: formData.languages.split(DELIMETER),\n  contextAuthors: formData.contextAuthors.split(DELIMETER),\n  sources: formData.sources.split(DELIMETER),\n  tags: {\n    ru: formData.tags.ru.split(DELIMETER),\n    he: formData.tags.he.split(DELIMETER),\n    en: formData.tags.en.split(DELIMETER),\n  },\n});\n","import React from \"react\";\nimport { Controller as ReactHookController, Control } from \"react-hook-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { get } from \"lodash\";\nimport { DELIMETER } from \"../utilites\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    reactHookController: {\n      marginTop: \"1em\",\n      \"& div\": {\n        width: \"100%\",\n      },\n    },\n  })\n);\n\ninterface ITextFieldController {\n  path: any;\n  label: string;\n  multiline?: boolean;\n  isArray?: boolean;\n  quote: unknown;\n  control: Control<Record<string, any>> | undefined;\n}\n\nexport default function TextFieldController(props: ITextFieldController) {\n  const classes = useStyles();\n  const { path, label, multiline, isArray, quote, control } = props;\n  const defaultValue = isArray\n    ? get(quote, path, []).join(DELIMETER)\n    : get(quote, path, \"\");\n\n  return (\n    <div className={classes.reactHookController}>\n      <ReactHookController\n        name={path}\n        control={control}\n        defaultValue={defaultValue}\n        render={({ field }) => (\n          <TextField\n            label={label}\n            multiline={multiline}\n            rows={multiline ? 6 : 1}\n            variant=\"outlined\"\n            {...field}\n          />\n        )}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  editQuoteAsync,\n  addQuoteAsync,\n  selectEditStatus,\n  selectAddStatus,\n  selectEditResult,\n  selectAddResult,\n  cleanResultFor,\n} from \"./formSlice\";\nimport { IQuote, selectQuotes, selectCounter } from \"../quote/quoteSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport styles from \"./Form.module.css\";\nimport Loading from \"../../common/Loading\";\nimport Alert from \"../../common/Confirmation\";\nimport TextFieldController from \"../../common/TextFieldController\";\nimport Button from \"@material-ui/core/Button\";\nimport { formatData } from \"../../utilites\";\n\nconst fields = [\n  { path: \"title.ru\", label: \"Title - Russian\" },\n  { path: \"title.he\", label: \"Title - Hebrew\" },\n  { path: \"title.en\", label: \"Title - English\" },\n  { path: \"context.ru\", label: \"Context - Russian\", multiline: true },\n  { path: \"context.he\", label: \"Context - Hebrew\", multiline: true },\n  { path: \"context.en\", label: \"Context - English\", multiline: true },\n  { path: \"author.ru\", label: \"Author - Russian\" },\n  { path: \"author.he\", label: \"Author - Hebrew\" },\n  { path: \"author.en\", label: \"Author - English\" },\n  { path: \"books\", label: \"Books\", isArray: true },\n  { path: \"languages\", label: \"Languages\", isArray: true },\n  { path: \"contextAuthors\", label: \"Context Authors\", isArray: true },\n  { path: \"sources\", label: \"Sources\", isArray: true },\n  { path: \"tags.ru\", label: \"Tags - Russian\", isArray: true },\n  { path: \"tags.he\", label: \"Tags - Hebrew\", isArray: true },\n  { path: \"tags.en\", label: \"Tags - English\", isArray: true },\n];\n\nexport function QuoteForm() {\n  const quotes = useAppSelector(selectQuotes);\n  const counter = useAppSelector(selectCounter);\n  const editStatus = useAppSelector(selectEditStatus);\n  const editResult = useAppSelector(selectEditResult);\n  const addStatus = useAppSelector(selectAddStatus);\n  const addResult = useAppSelector(selectAddResult);\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const action = history.location.pathname === \"/edit\" ? \"EDIT\" : \"ADD\";\n  const quote = action === \"EDIT\" ? quotes[counter] || {} : {};\n\n  const { control, handleSubmit } = useForm();\n\n  const handleEdit = (newQuote) => {\n    const id = (quote as IQuote).id;\n    dispatch(editQuoteAsync({ id, quote: newQuote }));\n  };\n\n  const handleAdd = (quote) => {\n    dispatch(addQuoteAsync({ quote }));\n  };\n\n  const handleOnCloseAlert = () => {\n    const value = addResult ? \"ADD\" : \"EDIT\";\n    dispatch(cleanResultFor(value));\n  };\n\n  const onSubmit = (formData) => {\n    const newQuote = formatData(formData);\n    action === \"EDIT\" ? handleEdit(newQuote) : handleAdd(newQuote);\n  };\n\n  const getForm = () => {\n    return (\n      <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n        {fields.map((cnt) => (\n          <TextFieldController\n            path={cnt.path}\n            label={cnt.label}\n            quote={quote}\n            control={control}\n            multiline={cnt.multiline}\n            isArray={cnt.isArray}\n          />\n        ))}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          {action}\n        </Button>\n      </form>\n    );\n  };\n\n  const isLoading = () => editStatus === \"loading\" || addStatus === \"loading\";\n\n  return (\n    <>\n      {isLoading() ? <Loading /> : getForm()}\n      {addResult && (\n        <Alert onClose={handleOnCloseAlert}>\n          Your quote has been successfully added\n        </Alert>\n      )}\n      {editResult && (\n        <Alert onClose={handleOnCloseAlert}>\n          Your quote has been successfully edited\n        </Alert>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { QuoteForm } from \"../features/quoteForm/Form\";\n\nexport default function Edit() {\n  return <QuoteForm />;\n}\n","import React from \"react\";\nimport { QuoteForm } from \"../features/quoteForm/Form\";\n\nexport default function Add() {\n  return <QuoteForm />;\n}\n","export default __webpack_public_path__ + \"static/media/noResults.cdc046af.svg\";","import React from \"react\";\nimport NoResultsSvg from \"../noResults.svg\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      marginTop: \"2em\",\n    },\n    text: {\n      fontFamily: \"Nunito\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontSize: 18,\n      lineHeight: 4,\n      color: \"#1B1D1F\",\n    },\n  })\n);\n\nfunction NoResults() {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <img src={NoResultsSvg} alt=\"No Results\" />\n      <p className={classes.text}> No resuts found </p>\n    </div>\n  );\n}\n\nexport default NoResults;\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useAppSelector } from \"../app/hooks\";\nimport {\n  selectStatus,\n  selectSearchedQuotes,\n} from \"../features/searchBar/searchBarSlice\";\nimport { selectLang } from \"../features/contextMenu/contextMenuSlice\";\nimport { selectQuotesFetchedByTags, selectStatusByTags } from \"../features/quote/quoteSlice\";\nimport NoResults from \"../common/NoResults\";\nimport Loading from \"../common/Loading\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0,\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nfunction Searched(props) {\n  const searchedQuotes = useAppSelector(selectSearchedQuotes);\n  const quotesFetchedByTags = useAppSelector(selectQuotesFetchedByTags);\n  const status = useAppSelector(selectStatus);\n  const statusByTags = useAppSelector(selectStatusByTags);\n  const lang = useAppSelector(selectLang);\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState<number | false>(false);\n\n  const handleChange =\n    (panel: number) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n  const getResult = () => {\n    const data = quotesFetchedByTags || searchedQuotes\n    return (\n      <div className={classes.root}>\n        {data.map((quote, index) => {\n          return (\n            <Accordion\n              key={quote.id}\n              expanded={expanded === index}\n              onChange={handleChange(index)}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1bh-content\"\n                id=\"panel1bh-header\"\n              >\n                <Typography className={classes.heading}>\n                  {quote.title[lang]}\n                </Typography>\n                <Typography className={classes.secondaryHeading}>\n                  {quote.author[lang]}\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography\n                  dangerouslySetInnerHTML={{\n                    __html: quote.context[lang] || \"\",\n                  }}\n                />\n              </AccordionDetails>\n            </Accordion>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return status === \"loading\" || statusByTags === \"loading\" ? (\n    <Loading />\n  ) : searchedQuotes.length === 0 && quotesFetchedByTags.length === 0? (\n    <NoResults />\n  ) : (\n    getResult()\n  );\n}\n\nexport default Searched;\n","import React from \"react\";\nimport \"./App.css\";\nimport MyHeaderAppBar from \"./common/AppBar\";\nimport { IntlProvider } from \"react-intl\";\nimport messages from \"./lang\";\nimport { selectLang } from \"../src/features/contextMenu/contextMenuSlice\";\nimport { useAppSelector } from \"../src/app/hooks\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Home from \"./pages/Home\";\nimport Edit from \"./pages/Edit\";\nimport Add from \"./pages/Add\";\nimport Searched from \"./pages/Searched\";\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n});\n\nfunction App() {\n  const selectedLang = useAppSelector(selectLang);\n\n  return (\n    <ThemeProvider theme={THEME}>\n      <IntlProvider messages={messages[selectedLang]} locale={selectedLang}>\n        <Router>\n          <Switch>\n            <div className=\"App\">\n              <div className=\"App-container\">\n                <MyHeaderAppBar />\n                <Route exact path=\"/searched\">\n                  <Searched />\n                </Route>\n                <Route path=\"/add\">\n                  <Add />\n                </Route>\n                <Route path=\"/edit\">\n                  <Edit />\n                </Route>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n              </div>\n            </div>\n          </Switch>\n        </Router>\n      </IntlProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../../app/store\";\nimport { fetchCount } from \"./counterAPI\";\n\nexport interface CounterState {\n  value: number;\n  status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: \"idle\",\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  \"counter/fetchCount\",\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd =\n  (amount: number): AppThunk =>\n  (dispatch, getState) => {\n    const currentValue = selectCount(getState());\n    if (currentValue % 2 === 1) {\n      dispatch(incrementByAmount(amount));\n    }\n  };\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport quoteReducer from \"../features/quote/quoteSlice\";\nimport contextMenuReducer from \"../features/contextMenu/contextMenuSlice\";\nimport quoteFormReducer from \"../features/quoteForm/formSlice\";\nimport searchBarReducer from \"../features/searchBar/searchBarSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    quote: quoteReducer,\n    contextMenu: contextMenuReducer,\n    quoteForm: quoteFormReducer,\n    searchBar: searchBarReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__ufwRM\",\"author\":\"styles_author__1OMBa\",\"context\":\"styles_context__3wU34\",\"tagsContainer\":\"styles_tagsContainer__3RCTX\",\"contextRtl\":\"styles_contextRtl__3-Jd7\",\"contextLtl\":\"styles_contextLtl__1khae\",\"flagsContainer\":\"styles_flagsContainer__3J3Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"ContextMenu_contextMenu__1fWFt\",\"list\":\"ContextMenu_list__2faNU\",\"listItem\":\"ContextMenu_listItem__HqktD\",\"listItemSelected\":\"ContextMenu_listItemSelected__OSsoq\"};"],"sourceRoot":""}